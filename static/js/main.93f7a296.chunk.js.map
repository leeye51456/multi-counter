{"version":3,"sources":["icons/add.svg","icons/check.svg","icons/check-all.svg","icons/clear.svg","icons/close.svg","icons/edit.svg","icons/invert.svg","icons/menu.svg","icons/remove.svg","icons/reset.svg","icons/subtract.svg","contexts.js","utils.js","icons.js","counter.jsx","number-input.jsx","shortcut.js","shortcut-capture-form.jsx","shortcut-collection.js","add-new-counter-modal.jsx","counter-data.js","edit-counters-modal.jsx","counter-action.js","local-storage-manager.js","app.jsx","serviceWorker.js","index.js"],"names":["module","exports","GlobalEditModeContext","React","createContext","NO_OP","includes","obj","target","indexOf","platformLower","navigator","platform","toLowerCase","userAgentLower","userAgent","appVersionLower","appVersion","isMacOs","textInputTypes","insertCommas","integerValue","toString","replace","numbersWithCommas","MAX_SAFE_INTEGER","Number","MIN_SAFE_INTEGER","utils","initializeOrGetArrayProperty","key","isTextForm","element","tagName","toUpperCase","type","icons","add","check","checkAll","clear","close","edit","invert","menu","remove","reset","subtract","Counter","getCorrectValue","newValue","props","min","max","callOnChangeByValue","defaults","value","onChange","name","countDown","step","countUp","handleCounterClick","event","context","checked","handleCheckboxChange","handleEditClick","stopPropagation","preventDefault","onEditClick","handleCountDownClick","handleCountUpClick","render","isGlobalEditModeEnabled","classes","counter","classNames","normalCounterButton","editCounterButton","className","onClick","readOnly","src","alt","Component","contextType","defaultProps","initial","customProps","NumberInput","componentDidMount","validity","inputRef","current","handleInputChange","handleInvertClick","onInvert","handleResetClick","onReset","inputProps","customProp","hasOwnProperty","ref","inputMode","createRef","Shortcut","code","keyName","shiftKey","getJumbledIfDiffersFrom","comparisonTarget","equals","JUMBLED","getStringToDisplay","shift","getNotShiftedFromCode","getNotShiftedFromKey","other","prefix","this","isValidCode","isValidKey","NONE","NO_CHANGE","notShiftedKeysFromCode","validCodes","Object","keys","notShiftedKeys","validKeys","test","ShortcutCaptureForm","handleKeyDown","nativeEvent","getShortcutString","shortcut","handleCancelClick","handleRemoveClick","onKeyDown","ShortcutCollection","initialShortcutCollection","getDifferenceMarked","result","shortcutNames","field","thisFields","otherFields","length","every","thisField","EMPTY","REJECTION_REASON","defaultState","countUpShortcut","countDownShortcut","AddNewCounterModal","bindNumberInputEventHandler","names","types","sentenceCasedName","substring","sentenceCasedType","primitiveFunctionName","bind","handleModalAfterOpen","existingNames","setState","namePattern","map","escapeStringRegexp","join","onCancel","handleNameChange","handleNumberInputChange","stateName","console","log","handleNumberInputInvert","state","isNaN","parseInt","handleCountUpShortcutChange","handleCountDownShortcutChange","handleSubmitClick","rejectionReasons","nameRef","valid","push","initialRef","minRef","maxRef","stepRef","window","alert","shortcuts","onSubmit","isOpen","onAfterOpen","onRequestClose","contentLabel","shouldCloseOnOverlayClick","shouldCloseOnEsc","overlayClassName","required","pattern","handleInitialChange","handleInitialInvert","handleMinChange","handleMinInvert","handleMaxChange","handleMaxInvert","handleStepChange","CounterData","param","getCorrectedValue","getCorrectedCounterData","getComparisonObject","resultBase","manipulatorProps","prop","rejectionReasonString","EditCountersModal","getActualLowerBound","rangeLowerBound","getActualUpperBound","rangeUpperBound","getActualMaxOfMin","Math","filter","minPropUpperBound","getActualMinOfMax","maxPropLowerBound","checkedCount","commonCounter","counters","index","currentCounter","counterProp","handleNumberInputReset","valueRef","submitArgument","isAllSafeInteger","isSafeInteger","error","counterNames","valueMin","valueMax","maxOfMin","minOfMax","valueMinWithCommas","valueMaxWithCommas","valueConstraintString","handleValueChange","handleValueInvert","handleValueReset","handleInitialReset","handleMinReset","handleMaxReset","handleStepReset","actionPresets","GET_COUNTED_UP","counterData","GET_COUNTED_DOWN","CounterAction","action","execute","itemNames","getCounterItemName","available","localStorage","setItem","removeItem","e","initialize","setCounterOrder","setCounterData","counterOrder","JSON","stringify","storedCounterProperties","storedCounterData","property","localStorageManager","getCounterOrder","isSecondTrial","counterOrderString","getItem","parse","constructor","Array","getCounterData","counterDataString","shortcutName","removeCounterData","ReactModal","setAppElement","App","document","addEventListener","handleDocumentKeyDown","loadCounters","componentWillUnmount","removeEventListener","isEditModeEnabled","modal","ctrlKey","altKey","metaKey","shortcutId","String","counterActions","counterActionsByShortcutId","updateCounters","appendCounter","getUpdatedCounterActions","newCounterData","oldCounterData","shortcutActions","oldShortcuts","newShortcuts","oldShortcutId","newShortcutId","counterActionsForShortcut","slice","getNewCounter","correctedShortcuts","handleSingleCounterEditClick","counterIndexesByName","updatedCounters","providedShortcut","hasChange","updateCheckedCountersState","checkedCounters","checkOrUncheckAll","removeCheckedCounters","removed","openOrCloseModal","willOpen","isEveryCounterChecked","countersToUpdate","handleClearClick","confirm","location","reload","handleNewCounterClick","handleNewCounterModalSubmit","newCounter","handleEditCountersClick","handleEditCountersModalSubmit","overwritingShortcuts","newCounters","singleCounterToEdit","handleModalCancel","handleEditCounterListClick","handleSelectAllClick","headerItem","normalOnly","editModeOnly","addNewCounterButton","counterComponents","editCountersModalProps","Provider","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","StrictMode","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.93f7a296.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/add.66ce4250.svg\";","module.exports = __webpack_public_path__ + \"static/media/check.e294285e.svg\";","module.exports = __webpack_public_path__ + \"static/media/check-all.e078e73b.svg\";","module.exports = __webpack_public_path__ + \"static/media/clear.4217c5fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.b840e171.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.539b3c38.svg\";","module.exports = __webpack_public_path__ + \"static/media/invert.f2ea96f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/menu.55f68494.svg\";","module.exports = __webpack_public_path__ + \"static/media/remove.16793e81.svg\";","module.exports = __webpack_public_path__ + \"static/media/reset.1cd9ed86.svg\";","module.exports = __webpack_public_path__ + \"static/media/subtract.d788b81e.svg\";","import React from 'react';\n\nexport const GlobalEditModeContext = React.createContext(false);\n","export const NO_OP = () => {};\n\n\nexport const includes = (obj, target) => {\n  if (target === 'indexOf') {\n    return !!obj.indexOf;\n  }\n  if (obj.indexOf) {\n    return obj.indexOf(target) !== -1;\n  }\n  return !!obj[target];\n};\n\n\nexport const initializeOrGetArrayProperty = (obj, key) => {\n  if (!obj[key]) {\n    obj[key] = [];\n  }\n  return obj[key];\n};\n\n\nconst platformLower = navigator.platform.toLowerCase();\nconst userAgentLower = navigator.userAgent.toLowerCase();\nconst appVersionLower = navigator.appVersion.toLowerCase();\n\nexport const isMacOs = (\n  includes(platformLower, 'mac')\n  || includes(userAgentLower, 'mac')\n  || includes(appVersionLower, 'mac')\n);\n\n\nconst textInputTypes = [\n  'date', 'datetime-local', 'email', 'month', 'number', 'password', 'search', 'tel', 'text', 'time', 'url', 'week'\n];\n\nexport const isTextForm = (element) => {\n  const tagName = element.tagName.toUpperCase();\n  return (\n    (tagName === 'INPUT' && includes(textInputTypes, element.type.toLowerCase()))\n    || tagName === 'TEXTAREA'\n  );\n};\n\n\nexport const insertCommas = (integerValue) => {\n  return integerValue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\nexport const numbersWithCommas = {\n  MAX_SAFE_INTEGER: insertCommas(Number.MAX_SAFE_INTEGER),\n  MIN_SAFE_INTEGER: insertCommas(Number.MIN_SAFE_INTEGER),\n};\n\n\nconst utils = {\n  NO_OP,\n  includes,\n  initializeOrGetArrayProperty,\n  isMacOs,\n  isTextForm,\n  insertCommas, numbersWithCommas,\n};\nexport default utils;\n","import add from './icons/add.svg';\nimport check from './icons/check.svg';\nimport checkAll from './icons/check-all.svg';\nimport clear from './icons/clear.svg';\nimport close from './icons/close.svg';\nimport edit from './icons/edit.svg';\nimport invert from './icons/invert.svg';\nimport menu from './icons/menu.svg';\nimport remove from './icons/remove.svg';\nimport reset from './icons/reset.svg';\nimport subtract from './icons/subtract.svg';\n\nconst icons = { add, check, checkAll, clear, close, edit, invert, menu, remove, reset, subtract };\nexport default icons;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { GlobalEditModeContext } from './contexts';\nimport { NO_OP } from './utils';\nimport icons from './icons';\n\nexport class Counter extends React.Component {\n  getCorrectValue = (newValue) => {\n    if (newValue < this.props.min) {\n      newValue = this.props.min;\n    } else if (newValue > this.props.max) {\n      newValue = this.props.max;\n    }\n    return newValue;\n  }\n\n  callOnChangeByValue = (newValue, defaults) => {\n    newValue = this.getCorrectValue(newValue);\n    if (this.props.value !== newValue) {\n      this.props.onChange({\n        ...defaults,\n        value: newValue,\n        name: this.props.name,\n      });\n    }\n  }\n\n  countDown = () => {\n    const newValue = this.props.value - this.props.step;\n    this.callOnChangeByValue(newValue);\n  }\n\n  countUp = () => {\n    const newValue = this.props.value + this.props.step;\n    this.callOnChangeByValue(newValue);\n  }\n\n  handleCounterClick = (event) => {\n    const isGlobalEditModeEnabled = this.context;\n    if (isGlobalEditModeEnabled) {\n      this.props.onChange({\n        checked: !this.props.checked,\n        name: this.props.name,\n      });\n    }\n  }\n\n  handleCheckboxChange = (event) => {\n    this.props.onChange({\n      checked: event.target.checked,\n      name: this.props.name,\n    });\n  }\n\n  handleEditClick = (event) => {\n    event.stopPropagation();\n    event.preventDefault();\n    this.props.onEditClick(this.props.name);\n  }\n\n  handleCountDownClick = (event) => {\n    event.preventDefault();\n    this.countDown();\n  }\n\n  handleCountUpClick = (event) => {\n    event.preventDefault();\n    this.countUp();\n  }\n\n  render = () => {\n    const isGlobalEditModeEnabled = this.context;\n\n    const classes = {\n      counter: classNames('counter', { 'counter-checked': this.props.checked }),\n      normalCounterButton: classNames('button-with-icon', { 'force-hidden': isGlobalEditModeEnabled }),\n      editCounterButton: classNames('button-with-icon-text', { 'force-hidden': !isGlobalEditModeEnabled }),\n    };\n\n    return (\n      <div\n        className={classes.counter}\n        onClick={this.handleCounterClick}\n      >\n        <ul>\n          <li className=\"counter-row\">\n            <label className=\"counter-label\">\n              {this.props.name}\n            </label>\n          </li>\n\n          <li className=\"counter-row\">\n            <input\n              type=\"text\"\n              value={this.props.value}\n              readOnly={true}\n              className=\"counter-value\"\n            />\n\n            <button\n              type=\"button\"\n              onClick={this.handleCountDownClick}\n              className={classes.normalCounterButton}\n            >\n              <img src={icons.subtract} alt=\"Count down\" />\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.handleCountUpClick}\n              className={classes.normalCounterButton}\n            >\n              <img src={icons.add} alt=\"Count up\" />\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.handleEditClick}\n              className={classes.editCounterButton}\n            >\n              <img src={icons.edit} alt=\"\" />\n              <span>Edit</span>\n            </button>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nCounter.contextType = GlobalEditModeContext;\n\nCounter.propTypes = {\n  initial: PropTypes.number,\n  value: PropTypes.number,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  step: PropTypes.number,\n  name: PropTypes.string,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func,\n  onEditClick: PropTypes.func,\n};\n\nCounter.defaultProps = {\n  initial: 0,\n  value: 0,\n  min: 0,\n  max: Number.MAX_SAFE_INTEGER,\n  step: 1,\n  name: '',\n  checked: false,\n  onChange: NO_OP,\n  onEditClick: NO_OP,\n};\n\nexport default Counter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { NO_OP } from './utils';\nimport icons from './icons';\n\n\nconst customProps = ['initial', 'onInvert', 'onReset'];\n\nclass NumberInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.inputRef = React.createRef();\n\n    this.validity = {};\n  }\n\n  componentDidMount = () => {\n    this.validity = this.inputRef.current.validity;\n  }\n\n  handleInputChange = (event) => {\n    this.validity = event.target.validity;\n    this.props.onChange(event);\n  }\n\n  handleInvertClick = (event) => {\n    event.preventDefault();\n    if (this.props.value !== '') {\n      this.props.onInvert();\n    }\n  }\n\n  handleResetClick = (event) => {\n    event.preventDefault();\n    this.props.onReset();\n  }\n\n  render = () => {\n    const inputProps = { ...this.props };\n    for (const customProp of customProps) {\n      if (inputProps.hasOwnProperty(customProp)) {\n        delete inputProps[customProp];\n      }\n    }\n\n    return (\n      <div className=\"extended-input\">\n        <input\n          { ...inputProps }\n          ref={this.inputRef}\n          type=\"number\"\n          inputMode=\"numeric\"\n          onChange={this.handleInputChange}\n        />\n        <button\n          type=\"button\"\n          onClick={this.handleInvertClick}\n          className={classNames({ 'force-hidden': this.props.onInvert === NO_OP })}\n        >\n          <img src={icons.invert} alt=\"Invert sign of this value\" />\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.handleResetClick}\n          className={classNames({ 'force-hidden': this.props.onReset === NO_OP })}\n        >\n          <img src={icons.reset} alt=\"Reset this value\" />\n        </button>\n      </div>\n    );\n  }\n}\n\nNumberInput.propTypes = {\n  onChange: PropTypes.func,\n  onInvert: PropTypes.func,\n  onReset: PropTypes.func,\n};\n\nNumberInput.defaultProps = {\n  min: Number.MIN_SAFE_INTEGER,\n  max: Number.MAX_SAFE_INTEGER,\n  step: 1,\n  value: '',\n  onChange: NO_OP,\n  onInvert: NO_OP,\n  onReset: NO_OP,\n};\n\nexport default NumberInput;\n","import { includes, isMacOs } from './utils';\n\n\nexport class Shortcut {\n  constructor({ code = '', keyName = '', shiftKey = false }) {\n    this.code = code;\n    this.keyName = keyName;\n    this.shiftKey = shiftKey;\n  }\n\n  static get NONE() {\n    return NONE;\n  }\n  static get JUMBLED() {\n    return JUMBLED;\n  }\n  static get NO_CHANGE() {\n    return NO_CHANGE;\n  }\n\n  static isValidCode(code) {\n    return isValidCode(code);\n  }\n  static getNotShiftedFromCode(code) {\n    return getNotShiftedFromCode(code);\n  }\n\n  static isValidKey(keyName) {\n    return isValidKey(keyName);\n  }\n  static getNotShiftedFromKey(keyName) {\n    return getNotShiftedFromKey(keyName);\n  }\n\n  getJumbledIfDiffersFrom = (comparisonTarget) => {\n    return this.equals(comparisonTarget) ? this : JUMBLED;\n  }\n\n  getStringToDisplay = () => {\n    let shift;\n    if (isMacOs) {\n      shift = this.shiftKey ? '⇧' : '';\n    } else {\n      shift = this.shiftKey ? 'Shift+' : '';\n    }\n\n    if (this.code) {\n      return `${shift}${getNotShiftedFromCode(this.code)}`;\n    }\n    return `${shift}${getNotShiftedFromKey(this.keyName)}`;\n  }\n\n  equals = (other) => {\n    return (\n      this.shiftKey === other.shiftKey\n      && this.code === other.code\n      && this.keyName === other.keyName\n    );\n  }\n\n  toString = () => {\n    const prefix = this.shiftKey ? 'Shift' : '';\n    return `${prefix}${this.code || this.keyName}`;\n  }\n}\n\n\nconst NONE = new Shortcut({ keyName: '', code: '', shiftKey: false });\nconst JUMBLED = new Shortcut(NONE);\nconst NO_CHANGE = new Shortcut(NONE);\n\n\nconst notShiftedKeysFromCode = {\n  'Backquote': '`', 'Digit1': '1', 'Digit2': '2', 'Digit3': '3', 'Digit4': '4', 'Digit5': '5', 'Digit6': '6',\n  'Digit7': '7', 'Digit8': '8', 'Digit9': '9', 'Digit0': '0', 'Minus': '-', 'Equal': '=',\n  'KeyQ': 'Q', 'KeyW': 'W', 'KeyE': 'E', 'KeyR': 'R', 'KeyT': 'T', 'KeyY': 'Y', 'KeyU': 'U', 'KeyI': 'I', 'KeyO': 'O',\n  'KeyP': 'P', 'BracketLeft': '[', 'BracketRight': ']', 'Backslash': '\\\\',\n  'KeyA': 'A', 'KeyS': 'S', 'KeyD': 'D', 'KeyF': 'F', 'KeyG': 'G', 'KeyH': 'H', 'KeyJ': 'J', 'KeyK': 'K', 'KeyL': 'L',\n  'Semicolon': ';', 'Quote': \"'\",\n  'KeyZ': 'Z', 'KeyX': 'X', 'KeyC': 'C', 'KeyV': 'V', 'KeyB': 'B', 'KeyN': 'N', 'KeyM': 'M', 'Comma': ',',\n  'Period': '.', 'Slash': '/',\n};\nconst validCodes = Object.keys(notShiftedKeysFromCode);\n\nconst isValidCode = (code) => {\n  return includes(validCodes, code);\n};\n\nconst getNotShiftedFromCode = (code) => {\n  const notShifted = notShiftedKeysFromCode[code];\n  return notShifted || '';\n};\n\n\nconst notShiftedKeys = {\n  '`': '`', '~': '`',\n  '!': '1', '@': '2', '#': '3', '$': '4', '%': '5', '^': '6', '&': '7', '*': '8', '(': '9', ')': '0',\n  '-': '-', '_': '-', '=': '=', '+': '=',\n  '[': '[', '{': '[', ']': ']', '}': ']', '\\\\': '\\\\', '|': '\\\\',\n  ';': ';', ':': ';', \"'\": \"'\", '\"': \"'\",\n  ',': ',', '<': ',', '.': '.', '>': '.', '/': '/', '?': '/',\n};\nconst validKeys = Object.keys(notShiftedKeys);\n\nconst isValidKey = (key) => {\n  return /^[A-Za-z]$/.test(key) || includes(validKeys, key);\n};\n\nconst getNotShiftedFromKey = (key) => {\n  if (/[A-Za-z]/.test(key)) {\n    return key.toUpperCase();\n  } else if (!/[`~!@#$%^&*(),./<>?;':\"[\\]\\\\{}|+_=-]/.test(key)) {\n    return key;\n  }\n  return notShiftedKeys[key];\n};\n\n\nexport default Shortcut;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Shortcut from './shortcut';\nimport { NO_OP } from './utils';\nimport icons from './icons';\n\nclass ShortcutCaptureForm extends React.Component {\n  handleKeyDown = (event) => {\n    const { key: keyName, shiftKey } = event;\n    const { code } = event.nativeEvent;\n\n    if (code) {\n      if (Shortcut.isValidCode(code)) {\n        this.props.onChange(new Shortcut({ code, shiftKey }));\n      } else {\n        this.props.onChange(Shortcut.NONE);\n      }\n\n    } else {\n      if (Shortcut.isValidKey(keyName)) {\n        this.props.onChange(new Shortcut({ keyName, shiftKey }));\n      } else {\n        this.props.onChange(Shortcut.NONE);\n      }\n    }\n  }\n\n  getShortcutString = () => {\n    const { shortcut } = this.props;\n    if (shortcut === Shortcut.NONE) {\n      return '(None)';\n    } else if (shortcut === Shortcut.JUMBLED) {\n      return '(Multiple values)';\n    } else if (shortcut === Shortcut.NO_CHANGE) {\n      return '(No change)';\n    }\n    return shortcut.getStringToDisplay();\n  }\n\n  handleCancelClick = (event) => {\n    event.preventDefault();\n    this.props.onChange(Shortcut.NO_CHANGE);\n  }\n\n  handleRemoveClick = (event) => {\n    event.preventDefault();\n    this.props.onChange(Shortcut.NONE);\n  }\n\n  render = () => {\n    return (\n      <div className=\"extended-input\">\n        <input\n          type=\"text\"\n          value={this.getShortcutString()}\n          onChange={NO_OP}\n          onKeyDown={this.handleKeyDown}\n        />\n        <button\n          type=\"button\"\n          onClick={this.handleCancelClick}\n        >\n          <img src={icons.reset} alt=\"Cancel modifying this shortcut binding\" />\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.handleRemoveClick}\n        >\n          <img src={icons.remove} alt=\"Remove this shortcut binding\" />\n        </button>\n      </div>\n    );\n  }\n}\n\nShortcutCaptureForm.propTypes = {\n  onChange: PropTypes.func,\n}\n\nShortcutCaptureForm.defaultProps = {\n  keyName: '',\n  code: '',\n  shiftKey: false,\n  shortcut: Shortcut.NO_CHANGE,\n  onChange: NO_OP,\n};\n\nexport default ShortcutCaptureForm;\n","import Shortcut from './shortcut';\n\nexport class ShortcutCollection {\n  constructor(initialShortcutCollection) {\n    for (const field of shortcutNames) {\n      if (initialShortcutCollection && initialShortcutCollection[field]) {\n        this[field] = initialShortcutCollection[field];\n      } else {\n        this[field] = Shortcut.NONE;\n      }\n    }\n  }\n\n  static get EMPTY() {\n    return EMPTY;\n  }\n\n  static get shortcutNames() {\n    return shortcutNames;\n  }\n\n  getDifferenceMarked = (comparisonTarget) => {\n    const result = new ShortcutCollection(this);\n    for (const field of shortcutNames) {\n      result[field] = this[field].getJumbledIfDiffersFrom(comparisonTarget[field]);\n    }\n    return result;\n  }\n\n  equals = (other) => {\n    const thisFields = Object.keys(this);\n    const otherFields = Object.keys(other);\n    return (\n      thisFields.length === otherFields.length\n      && thisFields.every((thisField) => this[thisField] === other[thisField])\n    );\n  }\n}\n\nconst shortcutNames = ['countUp', 'countDown'];\nconst EMPTY = new ShortcutCollection();\n\nexport default ShortcutCollection;\n","import React from 'react';\nimport ReactModal from 'react-modal';\nimport escapeStringRegexp from 'escape-string-regexp';\nimport NumberInput from './number-input';\nimport ShortcutCaptureForm from './shortcut-capture-form';\nimport Shortcut from './shortcut';\nimport ShortcutCollection from './shortcut-collection';\nimport { insertCommas, numbersWithCommas } from './utils';\nimport icons from './icons';\n\nconst REJECTION_REASON = {\n  name: '- \"Name\" should not be empty or duplicated.',\n  range: '- \"Initial/Maximum/Minimum value\" should be safe integers, where (Minimum value) <= (Initial value) <= (Maximum value).',\n  step: '- \"Counter step\" should be a positive safe integer.',\n};\n\nconst defaultState = {\n  name: '',\n  initial: '0',\n  min: '0',\n  max: `${Number.MAX_SAFE_INTEGER}`,\n  step: '1',\n  countUpShortcut: Shortcut.NONE,\n  countDownShortcut: Shortcut.NONE,\n};\n\nclass AddNewCounterModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.bindNumberInputEventHandler(['initial', 'min', 'max'], ['change', 'invert']);\n    this.bindNumberInputEventHandler(['step'], ['change']);\n\n    this.nameRef = React.createRef();\n    this.initialRef = React.createRef();\n    this.minRef = React.createRef();\n    this.maxRef = React.createRef();\n    this.stepRef = React.createRef();\n\n    this.state = defaultState;\n  }\n\n  bindNumberInputEventHandler = (names, types) => {\n    for (const name of names) {\n      const sentenceCasedName = name[0].toUpperCase() + name.substring(1);\n      for (const type of types) {\n        const sentenceCasedType = type[0].toUpperCase() + type.substring(1);\n        const primitiveFunctionName = `handleNumberInput${sentenceCasedType}`;\n        if (this[primitiveFunctionName]) {\n          this[`handle${sentenceCasedName}${sentenceCasedType}`] = this[primitiveFunctionName].bind(this, name);\n        }\n      }\n    }\n  }\n\n  handleModalAfterOpen = () => {\n    if (!this.props.existingNames) {\n      this.props.onCancel();\n      return;\n    }\n\n    this.setState({\n      ...defaultState,\n      namePattern: `^(?!(${this.props.existingNames.map((value) => escapeStringRegexp(value)).join('|')})$).+$`,\n    });\n  }\n\n  handleNameChange = (event) => {\n    this.setState({\n      name: event.target.value,\n    });\n  }\n\n  handleNumberInputChange = (stateName, event) => {\n    const validity = event.target.validity;\n    this.setState({ [stateName]: event.target.value }, () => console.log(stateName, validity));\n  }\n  handleNumberInputInvert = (stateName) => {\n    this.setState((state) => {\n      if (!isNaN(parseInt(state[stateName], 10))) {\n        return { [stateName]: -state[stateName] };\n      }\n    });\n  }\n\n  handleCountUpShortcutChange = (shortcut) => {\n    this.setState({\n      countUpShortcut: shortcut,\n    });\n  }\n\n  handleCountDownShortcutChange = (shortcut) => {\n    this.setState({\n      countDownShortcut: shortcut,\n    });\n  }\n\n  handleSubmitClick = (event) => {\n    event.preventDefault();\n\n    const rejectionReasons = [];\n    if (!this.nameRef.current.validity.valid) {\n      rejectionReasons.push(REJECTION_REASON.name);\n    }\n    const rangeValidity = (\n      this.initialRef.current.validity.valid\n      && this.minRef.current.validity.valid\n      && this.maxRef.current.validity.valid\n    );\n    if (!rangeValidity) {\n      rejectionReasons.push(REJECTION_REASON.range);\n    }\n    if (!this.stepRef.current.validity.valid) {\n      rejectionReasons.push(REJECTION_REASON.step);\n    }\n\n    if (rejectionReasons.length > 0) {\n      window.alert('Some values are invalid!\\n' + rejectionReasons.join('\\n'));\n      return;\n    }\n\n    let {name, initial, min, max, step} = this.state;\n    [initial, min, max, step] = [initial, min, max, step].map((value) => Number.parseInt(value, 10));\n    const { countUpShortcut: countUp, countDownShortcut: countDown } = this.state;\n    const shortcuts = new ShortcutCollection({ countUp, countDown });\n\n    this.props.onSubmit({ name, initial, min, max, step, shortcuts });\n  }\n\n  handleCancelClick = (event) => {\n    event.preventDefault();\n    this.props.onCancel();\n  }\n\n  render = () => {\n    return (\n      <ReactModal\n        isOpen={this.props.isOpen}\n        onAfterOpen={this.handleModalAfterOpen}\n        onRequestClose={this.props.onCancel}\n        contentLabel=\"Add New Counter\"\n        shouldCloseOnOverlayClick={true}\n        shouldCloseOnEsc={true}\n        className=\"modal\"\n        overlayClassName=\"modal-overlay\"\n      >\n        <h1>\n          Add New Counter\n        </h1>\n\n        <hr />\n\n        <ul>\n          <li>\n            <label>\n              Name\n            </label>\n            <input\n              ref={this.nameRef}\n              type=\"text\"\n              required={true}\n              pattern={this.state.namePattern}\n              value={this.state.name}\n              onChange={this.handleNameChange}\n            />\n          </li>\n          <li>\n            <label>\n              Initial value (Integer)\n            </label>\n            <NumberInput\n              ref={this.initialRef}\n              required={true}\n              min={this.state.min}\n              max={this.state.max}\n              step={1}\n              value={this.state.initial}\n              onChange={this.handleInitialChange}\n              onInvert={this.handleInitialInvert}\n            />\n            <p className=\"modal-input-constraint\">\n              {insertCommas(this.state.min)} ... {insertCommas(this.state.max)}\n            </p>\n          </li>\n          <li>\n            <label>\n              Minimum value (Integer)\n            </label>\n            <NumberInput\n              ref={this.minRef}\n              required={true}\n              min={Number.MIN_SAFE_INTEGER}\n              max={this.state.initial}\n              step={1}\n              value={this.state.min}\n              onChange={this.handleMinChange}\n              onInvert={this.handleMinInvert}\n            />\n            <p className=\"modal-input-constraint\">\n              {numbersWithCommas.MIN_SAFE_INTEGER} ... {insertCommas(this.state.initial)}\n            </p>\n          </li>\n          <li>\n            <label>\n              Maximum value (Integer)\n            </label>\n            <NumberInput\n              ref={this.maxRef}\n              required={true}\n              min={this.state.initial}\n              max={Number.MAX_SAFE_INTEGER}\n              step={1}\n              value={this.state.max}\n              onChange={this.handleMaxChange}\n              onInvert={this.handleMaxInvert}\n            />\n            <p className=\"modal-input-constraint\">\n              {insertCommas(this.state.initial)} ... {numbersWithCommas.MAX_SAFE_INTEGER}\n            </p>\n          </li>\n          <li>\n            <label>\n              Count step (Positive integer)\n            </label>\n            <NumberInput\n              ref={this.stepRef}\n              required={true}\n              min={1}\n              max={Number.MAX_SAFE_INTEGER}\n              step={1}\n              value={this.state.step}\n              onChange={this.handleStepChange}\n            />\n            <p className=\"modal-input-constraint\">\n              1 ... {numbersWithCommas.MAX_SAFE_INTEGER}\n            </p>\n          </li>\n        </ul>\n\n        <hr />\n\n        <h2>Shortcuts</h2>\n        <ul>\n          <li>\n            <label>\n              Count Up\n            </label>\n            <ShortcutCaptureForm\n              shortcut={this.state.countUpShortcut}\n              onChange={this.handleCountUpShortcutChange}\n            />\n          </li>\n          <li>\n            <label>\n              Count Down\n            </label>\n            <ShortcutCaptureForm\n              shortcut={this.state.countDownShortcut}\n              onChange={this.handleCountDownShortcutChange}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <ul className=\"modal-actions\">\n          <li>\n            <button\n              type=\"reset\"\n              onClick={this.handleCancelClick}\n              className=\"action-button button-negative\"\n            >\n              <img src={icons.close} alt=\"Cancel\" />\n            </button>\n          </li>\n          <li>\n            <button\n              type=\"button\"\n              onClick={this.handleSubmitClick}\n              className=\"action-button button-positive\"\n            >\n              <img src={icons.check} alt=\"Add\" />\n            </button>\n          </li>\n        </ul>\n\n      </ReactModal>\n    );\n  }\n}\n\nexport default AddNewCounterModal;\n","import Counter from './counter';\nimport ShortcutCollection from './shortcut-collection';\n\nexport class CounterData {\n  constructor(param) {\n    const { name, value, initial, min, max, step, checked, onChange, onEditClick, shortcuts } = {\n      ...Counter.defaultProps,\n      ...param,\n    };\n    this.name = name;\n    this.value = value;\n    this.initial = initial;\n    this.min = min;\n    this.max = max;\n    this.step = step;\n    this.checked = checked;\n    this.onChange = onChange;\n    this.onEditClick = onEditClick;\n    this.shortcuts = shortcuts ? shortcuts : ShortcutCollection.EMPTY;\n  }\n\n  static get manipulatorProps() {\n    return manipulatorProps;\n  }\n\n  getCorrectedValue = () => {\n    if (this.value < this.min) {\n      return this.min;\n    } else if (this.value > this.max) {\n      return this.max;\n    }\n    return this.value;\n  }\n\n  getCorrectedCounterData = () => {\n    return new CounterData({\n      ...this,\n      value: this.getCorrectedValue(),\n    });\n  }\n\n  getComparisonObject = () => {\n    const resultBase = {};\n    for (const prop of manipulatorProps) {\n      resultBase[prop] = this[prop];\n    }\n    return new CounterData(resultBase);\n  }\n\n  getJumbledIfDiffersFrom = (other) => {\n    const result = new CounterData(this);\n    for (const prop of manipulatorProps) {\n      if (this[prop] !== other[prop]) {\n        result[prop] = '';\n      }\n    }\n    return result;\n  }\n}\n\nconst manipulatorProps = ['value', 'initial', 'min', 'max', 'step'];\n\nexport default CounterData;\n","import React from 'react';\nimport ReactModal from 'react-modal';\nimport ShortcutCaptureForm from './shortcut-capture-form';\nimport CounterData from './counter-data';\nimport NumberInput from './number-input';\nimport Shortcut from './shortcut';\nimport ShortcutCollection from './shortcut-collection';\nimport { insertCommas, numbersWithCommas } from './utils';\nimport icons from './icons';\n\nconst rejectionReasonString = {\n  value: '- \"Value\" should be a safe integer within the correct range.',\n  initial: '- \"Initial value\" should be a safe integer within the correct range.',\n  min: '- \"Minimum value\" should be a safe integer within the correct range.',\n  max: '- \"Maximum value\" should be a safe integer within the correct range.',\n  step: '- \"Counter step\" should be a positive safe integer.',\n};\n\nclass EditCountersModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.bindNumberInputEventHandler(['value', 'initial', 'min', 'max'], ['change', 'invert', 'reset']);\n    this.bindNumberInputEventHandler(['step'], ['change', 'reset']);\n\n    this.valueRef = React.createRef();\n    this.initialRef = React.createRef();\n    this.minRef = React.createRef();\n    this.maxRef = React.createRef();\n    this.stepRef = React.createRef();\n\n    this.state = {\n      value: '0',\n      initial: '0',\n      min: '0',\n      max: `${Number.MAX_SAFE_INTEGER}`,\n      step: '1',\n      defaults: {\n        minPropUpperBound: Number.MAX_SAFE_INTEGER,\n        maxPropLowerBound: Number.MIN_SAFE_INTEGER,\n        rangeLowerBound: Number.MIN_SAFE_INTEGER,\n        rangeUpperBound: Number.MAX_SAFE_INTEGER,\n      },\n      countUpShortcut: Shortcut.NONE,\n      countDownShortcut: Shortcut.NONE,\n    };\n  }\n\n  bindNumberInputEventHandler = (names, types) => {\n    for (const name of names) {\n      const sentenceCasedName = name[0].toUpperCase() + name.substring(1);\n      for (const type of types) {\n        const sentenceCasedType = type[0].toUpperCase() + type.substring(1);\n        const primitiveFunctionName = `handleNumberInput${sentenceCasedType}`;\n        if (this[primitiveFunctionName]) {\n          this[`handle${sentenceCasedName}${sentenceCasedType}`] = this[primitiveFunctionName].bind(this, name);\n        }\n      }\n    }\n  }\n\n  getActualLowerBound = (state) => {\n    return state.min === '' ? state.defaults.rangeLowerBound : state.min;\n  }\n  getActualUpperBound = (state) => {\n    return state.max === '' ? state.defaults.rangeUpperBound : state.max;\n  }\n  getActualMaxOfMin = (state) => {\n    return Math.min(\n      ...[state.max].filter((value) => value !== ''),\n      state.initial !== '' || state.value !== ''\n        ? Math.min(state.initial, state.value)\n        : state.defaults.minPropUpperBound\n    );\n  }\n  getActualMinOfMax = (state) => {\n    return Math.max(\n      ...[state.min].filter((value) => value !== ''),\n      state.initial !== '' || state.value !== ''\n        ? Math.max(state.initial, state.value)\n        : state.defaults.maxPropLowerBound\n    );\n  }\n\n  handleModalAfterOpen = () => {\n    if (!this.props.names || !this.props.names.length) {\n      this.props.onCancel();\n      return;\n    }\n\n    this.setState((state, props) => {\n      const checkedCount = props.names.length;\n      const commonCounter = new CounterData(props.counters[props.names[0]]);\n      let minPropUpperBound = Math.min(Number.MAX_SAFE_INTEGER, commonCounter.initial, commonCounter.value);\n      let maxPropLowerBound = Math.max(Number.MIN_SAFE_INTEGER, commonCounter.initial, commonCounter.value);\n      let rangeLowerBound = commonCounter.min;\n      let rangeUpperBound = commonCounter.max;\n      for (let index = 1; index < checkedCount; index += 1) {\n        const currentCounter = props.counters[props.names[index]];\n        minPropUpperBound = Math.min(minPropUpperBound, currentCounter.initial, currentCounter.value);\n        maxPropLowerBound = Math.max(maxPropLowerBound, currentCounter.initial, currentCounter.value);\n        rangeLowerBound = Math.max(rangeLowerBound, currentCounter.min);\n        rangeUpperBound = Math.min(rangeUpperBound, currentCounter.max);\n        for (const counterProp of CounterData.manipulatorProps) {\n          if (commonCounter[counterProp] !== currentCounter[counterProp]) {\n            commonCounter[counterProp] = '';\n          }\n        }\n        commonCounter.shortcuts = commonCounter.shortcuts.getDifferenceMarked(currentCounter.shortcuts);\n      }\n\n      const { value, initial, min, max, step, shortcuts } = commonCounter;\n      return {\n        value, initial, min, max, step,\n        defaults: { minPropUpperBound, maxPropLowerBound, rangeLowerBound, rangeUpperBound },\n        countUpShortcut: shortcuts.countUp,\n        countDownShortcut: shortcuts.countDown,\n      };\n    });\n  }\n\n  handleNumberInputChange = (stateName, event) => {\n    this.setState({ [stateName]: event.target.value });\n  }\n  handleNumberInputInvert = (stateName) => {\n    this.setState((state) => {\n      if (!isNaN(parseInt(state[stateName], 10))) {\n        return { [stateName]: -state[stateName] };\n      }\n    });\n  }\n  handleNumberInputReset = (stateName) => {\n    this.setState({ [stateName]: '' });\n  }\n\n  handleCountUpShortcutChange = (shortcut) => {\n    this.setState({\n      countUpShortcut: shortcut,\n    });\n  }\n\n  handleCountDownShortcutChange = (shortcut) => {\n    this.setState({\n      countDownShortcut: shortcut,\n    });\n  }\n\n  handleSubmitClick = (event) => {\n    event.preventDefault();\n\n    const rejectionReasons = [];\n    if (!this.valueRef.current.validity.valid) {\n      rejectionReasons.push(rejectionReasonString.value);\n    }\n    if (!this.initialRef.current.validity.valid) {\n      rejectionReasons.push(rejectionReasonString.initial);\n    }\n    if (!this.minRef.current.validity.valid) {\n      rejectionReasons.push(rejectionReasonString.min);\n    }\n    if (!this.maxRef.current.validity.valid) {\n      rejectionReasons.push(rejectionReasonString.max);\n    }\n    if (!this.stepRef.current.validity.valid) {\n      rejectionReasons.push(rejectionReasonString.step);\n    }\n\n    if (rejectionReasons.length > 0) {\n      window.alert('Some values are invalid!\\n' + rejectionReasons.join('\\n'));\n      return;\n    }\n\n    const { value, initial, min, max, step, countUpShortcut, countDownShortcut } = this.state;\n    const submitArgument = {\n      value, initial, min, max, step,\n      shortcuts: new ShortcutCollection({\n        countUp: countUpShortcut,\n        countDown: countDownShortcut,\n      }),\n    };\n\n    let isAllSafeInteger = true;\n    for (const counterProp of CounterData.manipulatorProps) {\n      if (submitArgument[counterProp] === '') {\n        delete submitArgument[counterProp];\n      } else {\n        submitArgument[counterProp] = Number.parseInt(submitArgument[counterProp], 10);\n        if (!Number.isSafeInteger(submitArgument[counterProp])) {\n          isAllSafeInteger = false;\n        }\n      }\n    }\n\n    if (!isAllSafeInteger) {\n      console.error('Something wrong!');\n      return;\n    }\n\n    this.props.onSubmit({ names: this.props.names, ...submitArgument });\n  }\n\n  handleCancelClick = (event) => {\n    event.preventDefault();\n    this.props.onCancel();\n  }\n\n  render = () => {\n    const counterNames = this.props.names.map((name) => (\n      <li key={name}>\n        {name}\n      </li>\n    ));\n\n    const valueMin = this.getActualLowerBound(this.state);\n    const valueMax = this.getActualUpperBound(this.state);\n    const maxOfMin = this.getActualMaxOfMin(this.state);\n    const minOfMax = this.getActualMinOfMax(this.state);\n\n    const valueMinWithCommas = insertCommas(valueMin);\n    const valueMaxWithCommas = insertCommas(valueMax);\n\n    const valueConstraintString = (\n      valueMin <= valueMax\n      ? `${valueMinWithCommas} ... ${valueMaxWithCommas}`\n      : 'Unchangeable (Leave blank)'\n    );\n\n    return (\n      <ReactModal\n        isOpen={this.props.isOpen}\n        onAfterOpen={this.handleModalAfterOpen}\n        onRequestClose={this.props.onCancel}\n        contentLabel=\"Edit Counters\"\n        shouldCloseOnOverlayClick={true}\n        shouldCloseOnEsc={true}\n        className=\"modal\"\n        overlayClassName=\"modal-overlay\"\n      >\n        <h1>\n          Edit Counters\n        </h1>\n\n        <hr />\n\n        <ul>\n          <li>\n            <label>\n              Name\n            </label>\n            <ul className=\"modal-counter-names\">\n              {counterNames}\n            </ul>\n          </li>\n          <li>\n            <label>\n              Value (Integer)\n            </label>\n            <NumberInput\n              ref={this.valueRef}\n              min={valueMin}\n              max={valueMax}\n              step={1}\n              value={this.state.value}\n              onChange={this.handleValueChange}\n              onInvert={this.handleValueInvert}\n              onReset={this.handleValueReset}\n            />\n            <p className=\"modal-input-constraint\">\n              {valueConstraintString}\n            </p>\n          </li>\n          <li>\n            <label>\n              Initial value (Integer)\n            </label>\n            <NumberInput\n              ref={this.initialRef}\n              min={valueMin}\n              max={valueMax}\n              step={1}\n              value={this.state.initial}\n              onChange={this.handleInitialChange}\n              onInvert={this.handleInitialInvert}\n              onReset={this.handleInitialReset}\n            />\n            <p className=\"modal-input-constraint\">\n              {valueConstraintString}\n            </p>\n          </li>\n          <li>\n            <label>\n              Minimum value (Integer)\n            </label>\n            <NumberInput\n              ref={this.minRef}\n              min={Number.MIN_SAFE_INTEGER}\n              max={maxOfMin}\n              step={1}\n              value={this.state.min}\n              onChange={this.handleMinChange}\n              onInvert={this.handleMinInvert}\n              onReset={this.handleMinReset}\n            />\n            <p className=\"modal-input-constraint\">\n              {numbersWithCommas.MIN_SAFE_INTEGER} ... {insertCommas(maxOfMin)}\n            </p>\n          </li>\n          <li>\n            <label>\n              Maximum value (Integer)\n            </label>\n            <NumberInput\n              ref={this.maxRef}\n              min={minOfMax}\n              max={Number.MAX_SAFE_INTEGER}\n              step={1}\n              value={this.state.max}\n              onChange={this.handleMaxChange}\n              onInvert={this.handleMaxInvert}\n              onReset={this.handleMaxReset}\n            />\n            <p className=\"modal-input-constraint\">\n              {insertCommas(minOfMax)} ... {numbersWithCommas.MAX_SAFE_INTEGER}\n            </p>\n          </li>\n          <li>\n            <label>\n              Count step (Positive integer)\n            </label>\n            <NumberInput\n              ref={this.stepRef}\n              min={1}\n              max={Number.MAX_SAFE_INTEGER}\n              step={1}\n              value={this.state.step}\n              onChange={this.handleStepChange}\n              onReset={this.handleStepReset}\n            />\n            <p className=\"modal-input-constraint\">\n              1 ... {numbersWithCommas.MAX_SAFE_INTEGER}\n            </p>\n          </li>\n        </ul>\n\n        <hr />\n\n        <h2>Shortcuts</h2>\n        <ul>\n          <li>\n            <label>\n              Count Up\n            </label>\n            <ShortcutCaptureForm\n              shortcut={this.state.countUpShortcut}\n              onChange={this.handleCountUpShortcutChange}\n            />\n          </li>\n          <li>\n            <label>\n              Count Down\n            </label>\n            <ShortcutCaptureForm\n              shortcut={this.state.countDownShortcut}\n              onChange={this.handleCountDownShortcutChange}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <ul className=\"modal-actions\">\n          <li>\n            <button\n              type=\"reset\"\n              onClick={this.handleCancelClick}\n              className=\"action-button button-negative\"\n            >\n              <img src={icons.close} alt=\"Cancel\" />\n            </button>\n          </li>\n          <li>\n            <button\n              type=\"button\"\n              onClick={this.handleSubmitClick}\n              className=\"action-button button-positive\"\n            >\n              <img src={icons.check} alt=\"Apply\" />\n            </button>\n          </li>\n        </ul>\n\n      </ReactModal>\n    );\n  }\n}\n\nexport default EditCountersModal;\n","import CounterData from './counter-data';\n\nconst actionPresets = {\n  GET_COUNTED_UP: (counterData) => (\n    new CounterData({ ...counterData, value: counterData.value + counterData.step })\n      .getCorrectedCounterData()\n  ),\n  GET_COUNTED_DOWN: (counterData) => (\n    new CounterData({ ...counterData, value: counterData.value - counterData.step })\n      .getCorrectedCounterData()\n  ),\n};\n\nexport class CounterAction {\n  constructor(target, action) {\n    this.target = target;\n    this.execute = action;\n  }\n\n  static get actionPresets() {\n    return actionPresets;\n  }\n}\n\nexport default CounterAction;\n","import CounterData from './counter-data';\nimport Shortcut from './shortcut';\nimport ShortcutCollection from './shortcut-collection';\n\n\nconst itemNames = {\n  COUNTER_ORDER: 'counterOrder',\n  COUNTER_PREFIX: 'counter_',\n  _STORAGE_TEST: '__storage_test__',\n};\n\n\nconst getCounterItemName = (name) => {\n  return itemNames.COUNTER_PREFIX + name;\n};\n\n\nexport const available = (() => {\n  try {\n    localStorage.setItem(itemNames._STORAGE_TEST, itemNames._STORAGE_TEST);\n    localStorage.removeItem(itemNames._STORAGE_TEST);\n    return true;\n  } catch (e) {\n    return false;\n  }\n})();\n\n\nexport const initialize = () => {\n  if (!available) {\n    return null;\n  }\n\n  clear();\n  const INITIAL_COUNTER_NAME = 'Sample Counter';\n  setCounterOrder([INITIAL_COUNTER_NAME]);\n  setCounterData(new CounterData({ name: INITIAL_COUNTER_NAME }));\n  return true;\n};\n\n\nexport const getCounterOrder = (isSecondTrial) => {\n  if (!available) {\n    return null;\n  }\n\n  const counterOrderString = localStorage.getItem(itemNames.COUNTER_ORDER);\n  const counterOrder = JSON.parse(counterOrderString);\n\n  if (counterOrder && counterOrder.constructor === Array) {\n    return counterOrder;\n  }\n\n  if (isSecondTrial) {\n    return null;\n  }\n  initialize();\n  return getCounterOrder(true);\n};\n\nexport const setCounterOrder = (counterOrder) => {\n  if (!available) {\n    return null;\n  }\n\n  localStorage.setItem(itemNames.COUNTER_ORDER, JSON.stringify(counterOrder));\n  return true;\n};\n\n\nexport const getCounterData = (name) => {\n  if (!available) {\n    return null;\n  }\n\n  const counterDataString = localStorage.getItem(getCounterItemName(name));\n  const counterData = JSON.parse(counterDataString);\n  if (!counterData) {\n    return null;\n  }\n\n  if (counterData.shortcuts) {\n    for (const shortcutName of ShortcutCollection.shortcutNames) {\n      counterData.shortcuts[shortcutName] = (\n        counterData.shortcuts[shortcutName]\n        ? new Shortcut(counterData.shortcuts[shortcutName])\n        : Shortcut.NONE\n      );\n    }\n    counterData.shortcuts = new ShortcutCollection(counterData.shortcuts);\n  }\n\n  return new CounterData(counterData);\n};\n\nconst storedCounterProperties = ['name', 'value', 'initial', 'min', 'max', 'step', 'shortcuts'];\n\nexport const setCounterData = (counterData) => {\n  if (!available) {\n    return null;\n  }\n\n  const storedCounterData = {};\n  for (const property of storedCounterProperties) {\n    storedCounterData[property] = counterData[property];\n  }\n\n  localStorage.setItem(getCounterItemName(counterData.name), JSON.stringify(storedCounterData));\n  return true;\n};\n\n\nexport const removeCounterData = (name) => {\n  if (!available) {\n    return null;\n  }\n\n  localStorage.removeItem(getCounterItemName(name));\n  return true;\n};\n\n\nexport const clear = () => {\n  if (!available) {\n    return null;\n  }\n\n  localStorage.clear();\n  return true;\n};\n\n\nconst localStorageManager = {\n  available,\n  initialize,\n  getCounterOrder, setCounterOrder,\n  getCounterData, setCounterData, removeCounterData,\n  clear,\n};\nexport default localStorageManager;\n","import React from 'react';\nimport ReactModal from 'react-modal';\nimport classNames from 'classnames';\nimport Counter from './counter';\nimport AddNewCounterModal from './add-new-counter-modal';\nimport EditCountersModal from './edit-counters-modal';\nimport { GlobalEditModeContext } from './contexts';\nimport CounterAction from './counter-action';\nimport CounterData from './counter-data';\nimport Shortcut from './shortcut';\nimport ShortcutCollection from './shortcut-collection';\nimport localStorageManager from './local-storage-manager';\nimport icons from './icons';\nimport utils from './utils';\n\nReactModal.setAppElement('#root');\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      counterOrder: [],\n      counterIndexesByName: {},\n      counters: {},\n      counterActionsByShortcutId: {},\n      checkedCounters: [],\n      singleCounterToEdit: null,\n      modal: '',\n      isEditModeEnabled: false,\n    };\n  }\n\n  componentDidMount = () => {\n    document.addEventListener('keydown', this.handleDocumentKeyDown);\n\n    this.loadCounters();\n  }\n\n  componentWillUnmount = () => {\n    document.removeEventListener('keydown', this.handleDocumentKeyDown);\n  }\n\n  handleDocumentKeyDown = (nativeEvent) => {\n    if (utils.isTextForm(nativeEvent.target) || this.state.isEditModeEnabled || this.state.modal) {\n      return;\n    }\n\n    const { key, code, shiftKey, ctrlKey, altKey, metaKey } = nativeEvent;\n    const isInvalidKey = (\n      ctrlKey || altKey || metaKey\n      || (code && utils.includes(code.toLowerCase(), 'shift'))\n      || utils.includes(key.toLowerCase(), 'shift')\n    );\n    if (isInvalidKey) {\n      return;\n    }\n\n    const shortcutId = String(new Shortcut({ code, shiftKey, keyName: key }));\n    const counterActions = this.state.counterActionsByShortcutId[shortcutId];\n    if (!counterActions || !counterActions.length) {\n      return;\n    }\n\n    const counters = counterActions.map((action) => action.execute({ ...this.state.counters[action.target] }));\n    this.updateCounters(counters);\n  }\n\n  loadCounters = () => {\n    for (const name of localStorageManager.getCounterOrder()) {\n      const counter = localStorageManager.getCounterData(name);\n      if (counter) {\n        this.appendCounter(counter);\n      }\n    }\n  }\n\n  getUpdatedCounterActions = (counterActionsByShortcutId, { newCounterData, oldCounterData }) => {\n    const shortcutActions = {\n      countUp: CounterAction.actionPresets.GET_COUNTED_UP,\n      countDown: CounterAction.actionPresets.GET_COUNTED_DOWN,\n    };\n    const oldShortcuts = oldCounterData && oldCounterData.shortcuts;\n    const newShortcuts = newCounterData.shortcuts;\n\n    counterActionsByShortcutId = { ...counterActionsByShortcutId };\n    for (const shortcutName of ShortcutCollection.shortcutNames) {\n      const oldShortcutId = oldShortcuts && String(oldShortcuts[shortcutName]);\n      const newShortcutId = String(newShortcuts[shortcutName]);\n      if (oldShortcutId && newShortcutId && oldShortcutId === newShortcutId) {\n        continue;\n      }\n\n      const shouldOldShortcutBeRemoved = (\n        oldShortcutId\n        && newShortcuts[shortcutName] !== Shortcut.JUMBLED\n        && newShortcuts[shortcutName] !== Shortcut.NO_CHANGE\n      );\n      if (shouldOldShortcutBeRemoved) {\n        const counterActionsForShortcut = counterActionsByShortcutId[oldShortcutId];\n        counterActionsByShortcutId[oldShortcutId] = counterActionsForShortcut.filter((action) => (\n          action.target !== oldCounterData.name\n          || action.execute !== shortcutActions[shortcutName]\n        ));\n        if (counterActionsByShortcutId[oldShortcutId].length === 0) {\n          delete counterActionsByShortcutId[oldShortcutId];\n        }\n      }\n\n      if (newShortcutId) {\n        const counterActionsForShortcut =\n          utils.initializeOrGetArrayProperty(counterActionsByShortcutId, newShortcutId).slice();\n        counterActionsForShortcut.push(new CounterAction(newCounterData.name, shortcutActions[shortcutName]));\n        counterActionsByShortcutId[newShortcutId] = counterActionsForShortcut;\n      }\n    }\n\n    return counterActionsByShortcutId;\n  }\n\n  getNewCounter = (counterData) => {\n    return (\n      <Counter\n        {...counterData}\n        key={counterData.name}\n      />\n    );\n  }\n\n  appendCounter = (counterData) => {\n    this.setState((state) => {\n      const { name } = counterData;\n      const correctedShortcuts = new ShortcutCollection(counterData.shortcuts);\n      for (const shortcutName of ShortcutCollection.shortcutNames) {\n        if (Shortcut.NONE.equals(correctedShortcuts[shortcutName])) {\n          correctedShortcuts[shortcutName] = Shortcut.NONE;\n        }\n      }\n      const onChange = (newCounterData) => {\n        this.updateCounters([newCounterData]);\n      };\n      counterData = new CounterData({\n        ...counterData,\n        shortcuts: correctedShortcuts,\n        onChange,\n        onEditClick: this.handleSingleCounterEditClick,\n      });\n\n      const counters = {\n        ...state.counters,\n        [name]: counterData,\n      };\n\n      const counterOrder = state.counterOrder.slice();\n      const counterIndexesByName = {\n        ...state.counterIndexesByName,\n        [name]: counterOrder.length,\n      };\n      counterOrder.push(name);\n\n      const counterActionsByShortcutId = this.getUpdatedCounterActions(\n        state.counterActionsByShortcutId, { newCounterData: counterData }\n      );\n\n      localStorageManager.setCounterOrder(counterOrder);\n      localStorageManager.setCounterData(counterData);\n\n      return {\n        counterOrder,\n        counterIndexesByName,\n        counters,\n        counterActionsByShortcutId,\n      };\n    });\n  }\n\n  updateCounters = (updatedCounters) => {\n    this.setState((state) => {\n      const counters = { ...state.counters };\n\n      let counterActionsByShortcutId = { ...state.counterActionsByShortcutId };\n      for (let newCounterData of updatedCounters) {\n        const { name } = newCounterData;\n        const targetComponentIndex = state.counterIndexesByName[name];\n        if (typeof targetComponentIndex !== 'number') {\n          return;\n        }\n\n        if (newCounterData.shortcuts) {\n          counterActionsByShortcutId = this.getUpdatedCounterActions(\n            counterActionsByShortcutId, { newCounterData, oldCounterData: counters[name] }\n          );\n\n          const correctedShortcuts = {};\n          for (const shortcutName of ShortcutCollection.shortcutNames) {\n            const providedShortcut = newCounterData.shortcuts[shortcutName];\n            const hasChange = String(providedShortcut) || providedShortcut === Shortcut.NONE;\n            correctedShortcuts[shortcutName] = hasChange ? providedShortcut : counters[name].shortcuts[shortcutName];\n          }\n          newCounterData = new CounterData({\n            ...counters[name],\n            ...newCounterData,\n            shortcuts: new ShortcutCollection(correctedShortcuts),\n          });\n        }\n\n        counters[name] = {\n          ...counters[name],\n          ...newCounterData,\n        };\n\n        localStorageManager.setCounterData(counters[name]);\n      }\n\n      return { counters, counterActionsByShortcutId };\n    }, this.updateCheckedCountersState);\n  }\n\n  updateCheckedCountersState = () => {\n    this.setState((state) => {\n      const checkedCounters = state.counterOrder.filter((name) => state.counters[name].checked);\n      return { checkedCounters };\n    });\n  }\n\n  checkOrUncheckAll = (checked) => {\n    this.setState((state) => {\n      const counters = { ...state.counters };\n\n      for (const name of state.counterOrder) {\n        if (counters[name].checked !== checked) {\n          counters[name] = {\n            ...counters[name],\n            checked,\n          };\n        }\n      }\n\n      return { counters };\n    }, this.updateCheckedCountersState);\n  }\n\n  removeCheckedCounters = () => {\n    if (this.state.checkedCounters.length === 0) {\n      return;\n    }\n\n    this.setState((state) => {\n      const counterIndexesByName = { ...state.counterIndexesByName };\n      const counters = { ...state.counters };\n      let counterActionsByShortcutId = { ...state.counterActionsByShortcutId };\n\n      let removed = 0;\n      const counterOrder = state.counterOrder.filter((name, index) => {\n        const checked = counters[name].checked;\n        if (checked) {\n          const newCounterData = new CounterData({ ...counters[name], shortcuts: ShortcutCollection.EMPTY });\n          counterActionsByShortcutId = this.getUpdatedCounterActions(\n            counterActionsByShortcutId, { newCounterData, oldCounterData: counters[name] }\n          );\n\n          delete counterIndexesByName[name];\n          delete counters[name];\n          localStorageManager.removeCounterData(name);\n          removed += 1;\n        } else {\n          counterIndexesByName[name] = index - removed;\n        }\n        return !checked;\n      });\n\n      localStorageManager.setCounterOrder(counterOrder);\n\n      return {\n        counterOrder,\n        counterIndexesByName,\n        counters,\n        counterActionsByShortcutId,\n        isEditModeEnabled: false,\n      }\n    }, this.updateCheckedCountersState);\n  }\n\n  openOrCloseModal = (willOpen, modal) => {\n    this.setState({ modal: willOpen ? modal : '' });\n  }\n\n  isEveryCounterChecked = () => {\n    return this.state.checkedCounters.length === this.state.counterOrder.length;\n  }\n\n  handleResetClick = (event) => {\n    event.preventDefault();\n    if (this.state.checkedCounters.length === 0) {\n      return;\n    }\n\n    const countersToUpdate = this.state.checkedCounters.map((name) => ({\n      name,\n      checked: false,\n      value: this.state.counters[name].initial,\n    }));\n    this.updateCounters(countersToUpdate);\n    this.setState({ isEditModeEnabled: false });\n  }\n\n  handleRemoveClick = (event) => {\n    event.preventDefault();\n    this.removeCheckedCounters();\n  }\n\n  handleClearClick = (event) => {\n    event.preventDefault();\n    if (window.confirm('All counters will be removed if you click ‘OK’ button.')) {\n      localStorageManager.initialize();\n      window.location.reload();\n    }\n  }\n\n  handleNewCounterClick = (event) => {\n    event.preventDefault();\n    this.openOrCloseModal(true, 'AddNewCounterModal');\n  }\n\n  handleNewCounterModalSubmit = (param) => {\n    const newCounter = new CounterData({\n      ...param,\n      value: param.initial,\n    });\n    this.appendCounter(newCounter);\n\n    this.openOrCloseModal(false);\n  }\n\n  handleEditCountersClick = (event) => {\n    event.preventDefault();\n    if (this.state.checkedCounters.length > 0) {\n      this.openOrCloseModal(true, 'EditCountersModal');\n    }\n  }\n\n  handleEditCountersModalSubmit = (param) => {\n    const { counters } = this.state;\n\n    const overwritingShortcuts = {};\n    for (const shortcutName of ShortcutCollection.shortcutNames) {\n      if (param.shortcuts[shortcutName] !== Shortcut.JUMBLED) {\n        overwritingShortcuts[shortcutName] = param.shortcuts[shortcutName];\n      }\n    }\n\n    const newCounters = param.names.map((name) => {\n      const {\n        value = counters[name].value,\n        initial = counters[name].initial,\n        min = counters[name].min,\n        max = counters[name].max,\n        step = counters[name].step,\n        shortcuts = counters[name].shortcuts,\n      } = param;\n      return {\n        name, value, initial, min, max, step,\n        shortcuts: new ShortcutCollection({ ...shortcuts, ...overwritingShortcuts }),\n      };\n    });\n    this.updateCounters(newCounters);\n\n    this.openOrCloseModal(false);\n    if (!this.state.singleCounterToEdit) {\n      this.checkOrUncheckAll(false);\n    }\n    this.setState((state) => ({\n      singleCounterToEdit: null,\n      isEditModeEnabled: !!state.singleCounterToEdit,\n    }));\n  }\n\n  handleModalCancel = () => {\n    this.openOrCloseModal(false);\n    this.setState({ singleCounterToEdit: null });\n  }\n\n  handleEditCounterListClick = (event) => {\n    event.preventDefault();\n    this.checkOrUncheckAll(false);\n    this.setState((state) => {\n      return {\n        isEditModeEnabled: !state.isEditModeEnabled,\n      };\n    });\n  }\n\n  handleSelectAllClick = (event) => {\n    event.preventDefault();\n    this.checkOrUncheckAll(!this.isEveryCounterChecked());\n  }\n\n  handleSingleCounterEditClick = (name) => {\n    this.setState((state) => ({\n      singleCounterToEdit: state.counters[name],\n    }), () => {\n      this.openOrCloseModal(true, 'EditCountersModal');\n    });\n  }\n\n  render = () => {\n    const isEditModeEnabled = this.state.isEditModeEnabled;\n    const classes = {\n      headerItem: {\n        normalOnly: classNames('header-item', { 'force-hidden': isEditModeEnabled }),\n        editModeOnly: classNames('header-item', { 'force-hidden': !isEditModeEnabled }),\n      },\n      addNewCounterButton: classNames('button-add', 'button-positive', { 'invisible': isEditModeEnabled }),\n    };\n\n    const counterComponents = this.state.counterOrder.slice().map((name) => {\n      return this.getNewCounter(this.state.counters[name]);\n    });\n    const singleCounterToEdit = this.state.singleCounterToEdit;\n    const editCountersModalProps = {\n      counters: (\n        singleCounterToEdit\n        ? { [singleCounterToEdit.name]: singleCounterToEdit }\n        : this.state.counters\n      ),\n      names: singleCounterToEdit ? [singleCounterToEdit.name] : this.state.checkedCounters,\n    };\n\n    return (\n      <div className=\"App\">\n\n        <div className=\"header-container\">\n          <header className=\"header\">\n            <ul className=\"header-item-group group-left\">\n              <li className={classes.headerItem.normalOnly}>\n                <h1 className=\"app-title\">\n                  MultiCounter\n                </h1>\n              </li>\n\n              <li className={classes.headerItem.editModeOnly}>\n                <button\n                  type=\"button\"\n                  onClick={this.handleSelectAllClick}\n                  className=\"button-with-icon-text\"\n                >\n                  <img src={icons.checkAll} alt=\"\" />\n                  <span>Select All</span>\n                </button>\n              </li>\n\n              <li className={classes.headerItem.editModeOnly}>\n                <button\n                  type=\"button\"\n                  onClick={this.handleEditCountersClick}\n                  className=\"button-with-icon-text\"\n                >\n                  <img src={icons.edit} alt=\"\" />\n                  <span>Edit</span>\n                </button>\n              </li>\n\n              <li className={classes.headerItem.editModeOnly}>\n                <button\n                  type=\"button\"\n                  onClick={this.handleResetClick}\n                  className=\"button-with-icon-text button-negative\"\n                >\n                  <img src={icons.reset} alt=\"\" />\n                  <span>Reset</span>\n                </button>\n              </li>\n\n              <li className={classes.headerItem.editModeOnly}>\n                <button\n                  type=\"button\"\n                  onClick={this.handleRemoveClick}\n                  className=\"button-with-icon-text button-negative\"\n                >\n                  <img src={icons.remove} alt=\"\" />\n                  <span>Remove</span>\n                </button>\n              </li>\n\n              <li className={classes.headerItem.editModeOnly}>\n                <button\n                  type=\"button\"\n                  onClick={this.handleClearClick}\n                  className=\"button-with-icon-text button-negative\"\n                >\n                  <img src={icons.clear} alt=\"\" />\n                  <span>Clear All</span>\n                </button>\n              </li>\n            </ul>\n\n            <ul className=\"header-item-group group-right\">\n              <li className=\"header-item\">\n                <button\n                  type=\"button\"\n                  onClick={this.handleEditCounterListClick}\n                  className=\"button-with-icon\"\n                >\n                  {\n                    isEditModeEnabled\n                    ? <img src={icons.close} alt=\"Exit Edit Mode\" />\n                    : <img src={icons.menu} alt=\"Edit Counter List\" />\n                  }\n                </button>\n              </li>\n            </ul>\n          </header>\n        </div>\n\n        <div className=\"main-container\">\n          <main className=\"main\">\n            <GlobalEditModeContext.Provider\n              value={isEditModeEnabled}\n            >\n              {counterComponents}\n            </GlobalEditModeContext.Provider>\n\n            <div className=\"main-additional\">\n              <button\n                type=\"button\"\n                onClick={this.handleNewCounterClick}\n                className={classes.addNewCounterButton}\n              >\n                <img src={icons.add} alt=\"Add New Counter\" />\n              </button>\n            </div>\n          </main>\n        </div>\n\n        <AddNewCounterModal\n          existingNames={this.state.counterOrder}\n          isOpen={this.state.modal === 'AddNewCounterModal'}\n          onSubmit={this.handleNewCounterModalSubmit}\n          onCancel={this.handleModalCancel}\n        />\n\n        <EditCountersModal\n          counters={editCountersModalProps.counters}\n          names={editCountersModalProps.names}\n          isOpen={this.state.modal === 'EditCountersModal'}\n          onSubmit={this.handleEditCountersModalSubmit}\n          onCancel={this.handleModalCancel}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}