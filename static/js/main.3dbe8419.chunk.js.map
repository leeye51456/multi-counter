{"version":3,"sources":["icons/add.svg","icons/check.svg","icons/check-all.svg","icons/clear.svg","icons/close.svg","icons/edit.svg","icons/invert.svg","icons/menu.svg","icons/remove.svg","icons/reset.svg","icons/subtract.svg","i18n.js","contexts.js","utils.js","icons.js","counter.jsx","number-input.jsx","shortcut.js","shortcut-capture-form.jsx","shortcut-collection.js","add-new-counter-modal.jsx","counter-data.js","edit-counters-modal.jsx","counter-action.js","local-storage-manager.js","app.jsx","serviceWorker.js","index.js"],"names":["module","exports","resources","en","translation","ko","i18n","use","LanguageDetector","initReactI18next","init","fallbackLng","detection","order","lookupQuerystring","interpolation","escapeValue","GlobalEditModeContext","React","createContext","NO_OP","includes","obj","target","indexOf","platformLower","navigator","platform","toLowerCase","userAgentLower","userAgent","appVersionLower","appVersion","isMacOs","textInputTypes","insertCommas","integerValue","toString","replace","numbersWithCommas","MAX_SAFE_INTEGER","Number","MIN_SAFE_INTEGER","utils","initializeOrGetArrayProperty","key","isTextForm","element","tagName","toUpperCase","type","icons","add","check","checkAll","clear","close","edit","invert","menu","remove","reset","subtract","Counter","getCorrectValue","newValue","props","min","max","callOnChangeByValue","defaults","value","onChange","name","countDown","step","countUp","handleCounterClick","event","context","checked","handleCheckboxChange","handleEditClick","stopPropagation","preventDefault","onEditClick","handleCountDownClick","handleCountUpClick","render","isGlobalEditModeEnabled","t","classes","counter","classNames","normalCounterButton","editCounterButton","className","onClick","readOnly","src","alt","Component","contextType","defaultProps","initial","withTranslation","numberInputProps","NumberInput","componentDidMount","validity","inputRef","current","handleInputChange","handleInvertClick","onInvert","handleResetClick","onReset","inputProps","propName","hasOwnProperty","ref","inputMode","createRef","withRef","Shortcut","code","keyName","shiftKey","getJumbledIfDiffersFrom","comparisonTarget","equals","JUMBLED","getStringToDisplay","shift","getNotShiftedFromCode","getNotShiftedFromKey","other","prefix","this","isValidCode","isValidKey","NONE","NO_CHANGE","notShiftedKeysFromCode","validCodes","Object","keys","notShiftedKeys","validKeys","test","ShortcutCaptureForm","handleKeyDown","nativeEvent","getShortcutString","shortcut","handleCancelClick","handleRemoveClick","onKeyDown","ShortcutCollection","initialShortcutCollection","getDifferenceMarked","result","shortcutNames","field","thisFields","otherFields","length","every","thisField","EMPTY","defaultState","countUpShortcut","countDownShortcut","AddNewCounterModal","bindNumberInputEventHandler","names","types","sentenceCasedName","substring","sentenceCasedType","primitiveFunctionName","bind","handleModalAfterOpen","existingNames","setState","namePattern","map","escapeStringRegexp","join","onCancel","handleNameChange","handleNumberInputChange","stateName","handleNumberInputInvert","state","isNaN","parseInt","handleCountUpShortcutChange","handleCountDownShortcutChange","handleSubmitClick","rejectionReasons","nameRef","valid","push","initialRef","minRef","maxRef","stepRef","window","alert","shortcuts","onSubmit","modalTitle","isOpen","onAfterOpen","onRequestClose","contentLabel","shouldCloseOnOverlayClick","shouldCloseOnEsc","overlayClassName","required","pattern","handleInitialChange","handleInitialInvert","handleMinChange","handleMinInvert","handleMaxChange","handleMaxInvert","handleStepChange","CounterData","param","getCorrectedValue","getCorrectedCounterData","getComparisonObject","resultBase","manipulatorProps","prop","EditCountersModal","getActualLowerBound","rangeLowerBound","getActualUpperBound","rangeUpperBound","getActualMaxOfMin","Math","filter","minPropUpperBound","getActualMinOfMax","maxPropLowerBound","checkedCount","commonCounter","counters","index","currentCounter","counterProp","handleNumberInputReset","valueRef","submitArgument","isAllSafeInteger","isSafeInteger","console","error","counterNames","valueMin","valueMax","maxOfMin","minOfMax","valueMinWithCommas","valueMaxWithCommas","valueConstraintString","handleValueChange","handleValueInvert","handleValueReset","handleInitialReset","handleMinReset","handleMaxReset","handleStepReset","actionPresets","GET_COUNTED_UP","counterData","GET_COUNTED_DOWN","CounterAction","action","execute","itemNames","getCounterItemName","available","localStorage","setItem","removeItem","e","initialize","setCounterOrder","setCounterData","counterOrder","JSON","stringify","storedCounterProperties","storedCounterData","property","localStorageManager","getCounterOrder","isSecondTrial","counterOrderString","getItem","parse","constructor","Array","getCounterData","counterDataString","shortcutName","removeCounterData","ReactModal","setAppElement","App","document","addEventListener","handleDocumentKeyDown","loadCounters","componentWillUnmount","removeEventListener","isEditModeEnabled","modal","ctrlKey","altKey","metaKey","shortcutId","String","counterActions","counterActionsByShortcutId","updateCounters","appendCounter","getUpdatedCounterActions","newCounterData","oldCounterData","shortcutActions","oldShortcuts","newShortcuts","oldShortcutId","newShortcutId","counterActionsForShortcut","slice","getNewCounter","correctedShortcuts","handleSingleCounterEditClick","counterIndexesByName","updatedCounters","providedShortcut","hasChange","updateCheckedCountersState","checkedCounters","checkOrUncheckAll","removeCheckedCounters","removed","openOrCloseModal","willOpen","isEveryCounterChecked","countersToUpdate","handleClearClick","message","confirm","location","reload","handleNewCounterClick","handleNewCounterModalSubmit","newCounter","handleEditCountersClick","handleEditCountersModalSubmit","overwritingShortcuts","newCounters","singleCounterToEdit","handleModalCancel","handleEditCounterListClick","handleSelectAllClick","headerItem","normalOnly","editModeOnly","addNewCounterButton","counterComponents","editCountersModalProps","Provider","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","ReactDOM","StrictMode","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3dbe8419.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/add.66ce4250.svg\";","module.exports = __webpack_public_path__ + \"static/media/check.e294285e.svg\";","module.exports = __webpack_public_path__ + \"static/media/check-all.e078e73b.svg\";","module.exports = __webpack_public_path__ + \"static/media/clear.4217c5fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.b840e171.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.539b3c38.svg\";","module.exports = __webpack_public_path__ + \"static/media/invert.f2ea96f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/menu.55f68494.svg\";","module.exports = __webpack_public_path__ + \"static/media/remove.16793e81.svg\";","module.exports = __webpack_public_path__ + \"static/media/reset.1cd9ed86.svg\";","module.exports = __webpack_public_path__ + \"static/media/subtract.d788b81e.svg\";","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport translationEn from './locales/en.json';\nimport translationKo from './locales/ko.json';\n\nconst languageDetectorOptions = {\n  order: ['querystring', 'navigator'],\n  lookupQuerystring: 'lang',\n};\n\nconst resources = {\n  en: {\n    translation: translationEn,\n  },\n  ko: {\n    translation: translationKo,\n  },\n};\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources,\n\n    fallbackLng: 'en',\n    detection: languageDetectorOptions,\n\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;\n","import React from 'react';\n\nexport const GlobalEditModeContext = React.createContext(false);\n","export const NO_OP = () => {};\n\n\nexport const includes = (obj, target) => {\n  if (target === 'indexOf') {\n    return !!obj.indexOf;\n  }\n  if (obj.indexOf) {\n    return obj.indexOf(target) !== -1;\n  }\n  return !!obj[target];\n};\n\n\nexport const initializeOrGetArrayProperty = (obj, key) => {\n  if (!obj[key]) {\n    obj[key] = [];\n  }\n  return obj[key];\n};\n\n\nconst platformLower = navigator.platform.toLowerCase();\nconst userAgentLower = navigator.userAgent.toLowerCase();\nconst appVersionLower = navigator.appVersion.toLowerCase();\n\nexport const isMacOs = (\n  includes(platformLower, 'mac')\n  || includes(userAgentLower, 'mac')\n  || includes(appVersionLower, 'mac')\n);\n\n\nconst textInputTypes = [\n  'date', 'datetime-local', 'email', 'month', 'number', 'password', 'search', 'tel', 'text', 'time', 'url', 'week'\n];\n\nexport const isTextForm = (element) => {\n  const tagName = element.tagName.toUpperCase();\n  return (\n    (tagName === 'INPUT' && includes(textInputTypes, element.type.toLowerCase()))\n    || tagName === 'TEXTAREA'\n  );\n};\n\n\nexport const insertCommas = (integerValue) => {\n  return integerValue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\nexport const numbersWithCommas = {\n  MAX_SAFE_INTEGER: insertCommas(Number.MAX_SAFE_INTEGER),\n  MIN_SAFE_INTEGER: insertCommas(Number.MIN_SAFE_INTEGER),\n};\n\n\nconst utils = {\n  NO_OP,\n  includes,\n  initializeOrGetArrayProperty,\n  isMacOs,\n  isTextForm,\n  insertCommas, numbersWithCommas,\n};\nexport default utils;\n","import add from './icons/add.svg';\nimport check from './icons/check.svg';\nimport checkAll from './icons/check-all.svg';\nimport clear from './icons/clear.svg';\nimport close from './icons/close.svg';\nimport edit from './icons/edit.svg';\nimport invert from './icons/invert.svg';\nimport menu from './icons/menu.svg';\nimport remove from './icons/remove.svg';\nimport reset from './icons/reset.svg';\nimport subtract from './icons/subtract.svg';\n\nconst icons = { add, check, checkAll, clear, close, edit, invert, menu, remove, reset, subtract };\nexport default icons;\n","import React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { GlobalEditModeContext } from './contexts';\nimport { NO_OP } from './utils';\nimport icons from './icons';\n\nexport class Counter extends React.Component {\n  getCorrectValue = (newValue) => {\n    if (newValue < this.props.min) {\n      newValue = this.props.min;\n    } else if (newValue > this.props.max) {\n      newValue = this.props.max;\n    }\n    return newValue;\n  }\n\n  callOnChangeByValue = (newValue, defaults) => {\n    newValue = this.getCorrectValue(newValue);\n    if (this.props.value !== newValue) {\n      this.props.onChange({\n        ...defaults,\n        value: newValue,\n        name: this.props.name,\n      });\n    }\n  }\n\n  countDown = () => {\n    const newValue = this.props.value - this.props.step;\n    this.callOnChangeByValue(newValue);\n  }\n\n  countUp = () => {\n    const newValue = this.props.value + this.props.step;\n    this.callOnChangeByValue(newValue);\n  }\n\n  handleCounterClick = (event) => {\n    const isGlobalEditModeEnabled = this.context;\n    if (isGlobalEditModeEnabled) {\n      this.props.onChange({\n        checked: !this.props.checked,\n        name: this.props.name,\n      });\n    }\n  }\n\n  handleCheckboxChange = (event) => {\n    this.props.onChange({\n      checked: event.target.checked,\n      name: this.props.name,\n    });\n  }\n\n  handleEditClick = (event) => {\n    event.stopPropagation();\n    event.preventDefault();\n    this.props.onEditClick(this.props.name);\n  }\n\n  handleCountDownClick = (event) => {\n    event.preventDefault();\n    this.countDown();\n  }\n\n  handleCountUpClick = (event) => {\n    event.preventDefault();\n    this.countUp();\n  }\n\n  render = () => {\n    const isGlobalEditModeEnabled = this.context;\n    const { t } = this.props;\n\n    const classes = {\n      counter: classNames('counter', { 'counter-checked': this.props.checked }),\n      normalCounterButton: classNames('button-with-icon', { 'force-hidden': isGlobalEditModeEnabled }),\n      editCounterButton: classNames('button-with-icon-text', { 'force-hidden': !isGlobalEditModeEnabled }),\n    };\n\n    return (\n      <div\n        className={classes.counter}\n        onClick={this.handleCounterClick}\n      >\n        <ul>\n          <li className=\"counter-row\">\n            <label className=\"counter-label\">\n              {this.props.name}\n            </label>\n          </li>\n\n          <li className=\"counter-row\">\n            <input\n              type=\"text\"\n              value={this.props.value}\n              readOnly={true}\n              className=\"counter-value\"\n            />\n\n            <button\n              type=\"button\"\n              onClick={this.handleCountDownClick}\n              className={classes.normalCounterButton}\n            >\n              <img src={icons.subtract} alt={t('counter.count-down')} />\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.handleCountUpClick}\n              className={classes.normalCounterButton}\n            >\n              <img src={icons.add} alt={t('counter.count-up')} />\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.handleEditClick}\n              className={classes.editCounterButton}\n            >\n              <img src={icons.edit} alt=\"\" />\n              <span>\n                {t('counter.edit')}\n              </span>\n            </button>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nCounter.contextType = GlobalEditModeContext;\n\nCounter.propTypes = {\n  initial: PropTypes.number,\n  value: PropTypes.number,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  step: PropTypes.number,\n  name: PropTypes.string,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func,\n  onEditClick: PropTypes.func,\n};\n\nCounter.defaultProps = {\n  initial: 0,\n  value: 0,\n  min: 0,\n  max: Number.MAX_SAFE_INTEGER,\n  step: 1,\n  name: '',\n  checked: false,\n  onChange: NO_OP,\n  onEditClick: NO_OP,\n};\n\nexport default withTranslation()(Counter);\n","import React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { NO_OP } from './utils';\nimport icons from './icons';\n\n\nconst numberInputProps = [\n  'autocomplete', 'autofocus', 'disabled', 'form', 'list', 'max', 'min',\n  'name', 'placeholder', 'readonly', 'required', 'step', 'value'\n];\n\nclass NumberInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.inputRef = React.createRef();\n\n    this.validity = {};\n  }\n\n  componentDidMount = () => {\n    this.validity = this.inputRef.current.validity;\n  }\n\n  handleInputChange = (event) => {\n    this.validity = event.target.validity;\n    this.props.onChange(event);\n  }\n\n  handleInvertClick = (event) => {\n    event.preventDefault();\n    if (this.props.value !== '') {\n      this.props.onInvert();\n    }\n  }\n\n  handleResetClick = (event) => {\n    event.preventDefault();\n    this.props.onReset();\n  }\n\n  render = () => {\n    const { t } = this.props;\n\n    const inputProps = {};\n    for (const propName of numberInputProps) {\n      if (this.props.hasOwnProperty(propName)) {\n        inputProps[propName] = this.props[propName];\n      }\n    }\n\n    return (\n      <div className=\"extended-input\">\n        <input\n          { ...inputProps }\n          ref={this.inputRef}\n          type=\"number\"\n          inputMode=\"numeric\"\n          onChange={this.handleInputChange}\n        />\n        <button\n          type=\"button\"\n          onClick={this.handleInvertClick}\n          className={classNames({ 'force-hidden': this.props.onInvert === NO_OP })}\n        >\n          <img src={icons.invert} alt={t('number-input.invert')} />\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.handleResetClick}\n          className={classNames({ 'force-hidden': this.props.onReset === NO_OP })}\n        >\n          <img src={icons.reset} alt={t('number-input.reset')} />\n        </button>\n      </div>\n    );\n  }\n}\n\nNumberInput.propTypes = {\n  onChange: PropTypes.func,\n  onInvert: PropTypes.func,\n  onReset: PropTypes.func,\n};\n\nNumberInput.defaultProps = {\n  min: Number.MIN_SAFE_INTEGER,\n  max: Number.MAX_SAFE_INTEGER,\n  step: 1,\n  value: '',\n  onChange: NO_OP,\n  onInvert: NO_OP,\n  onReset: NO_OP,\n};\n\nexport default withTranslation([], { withRef: true })(NumberInput);\n","import { includes, isMacOs } from './utils';\n\n\nexport class Shortcut {\n  constructor({ code = '', keyName = '', shiftKey = false }) {\n    this.code = code;\n    this.keyName = keyName;\n    this.shiftKey = shiftKey;\n  }\n\n  static get NONE() {\n    return NONE;\n  }\n  static get JUMBLED() {\n    return JUMBLED;\n  }\n  static get NO_CHANGE() {\n    return NO_CHANGE;\n  }\n\n  static isValidCode(code) {\n    return isValidCode(code);\n  }\n  static getNotShiftedFromCode(code) {\n    return getNotShiftedFromCode(code);\n  }\n\n  static isValidKey(keyName) {\n    return isValidKey(keyName);\n  }\n  static getNotShiftedFromKey(keyName) {\n    return getNotShiftedFromKey(keyName);\n  }\n\n  getJumbledIfDiffersFrom = (comparisonTarget) => {\n    return this.equals(comparisonTarget) ? this : JUMBLED;\n  }\n\n  getStringToDisplay = () => {\n    let shift;\n    if (isMacOs) {\n      shift = this.shiftKey ? '⇧' : '';\n    } else {\n      shift = this.shiftKey ? 'Shift+' : '';\n    }\n\n    if (this.code) {\n      return `${shift}${getNotShiftedFromCode(this.code)}`;\n    }\n    return `${shift}${getNotShiftedFromKey(this.keyName)}`;\n  }\n\n  equals = (other) => {\n    return (\n      this.shiftKey === other.shiftKey\n      && this.code === other.code\n      && this.keyName === other.keyName\n    );\n  }\n\n  toString = () => {\n    const prefix = this.shiftKey ? 'Shift' : '';\n    return `${prefix}${this.code || this.keyName}`;\n  }\n}\n\n\nconst NONE = new Shortcut({ keyName: '', code: '', shiftKey: false });\nconst JUMBLED = new Shortcut(NONE);\nconst NO_CHANGE = new Shortcut(NONE);\n\n\nconst notShiftedKeysFromCode = {\n  'Backquote': '`', 'Digit1': '1', 'Digit2': '2', 'Digit3': '3', 'Digit4': '4', 'Digit5': '5', 'Digit6': '6',\n  'Digit7': '7', 'Digit8': '8', 'Digit9': '9', 'Digit0': '0', 'Minus': '-', 'Equal': '=',\n  'KeyQ': 'Q', 'KeyW': 'W', 'KeyE': 'E', 'KeyR': 'R', 'KeyT': 'T', 'KeyY': 'Y', 'KeyU': 'U', 'KeyI': 'I', 'KeyO': 'O',\n  'KeyP': 'P', 'BracketLeft': '[', 'BracketRight': ']', 'Backslash': '\\\\',\n  'KeyA': 'A', 'KeyS': 'S', 'KeyD': 'D', 'KeyF': 'F', 'KeyG': 'G', 'KeyH': 'H', 'KeyJ': 'J', 'KeyK': 'K', 'KeyL': 'L',\n  'Semicolon': ';', 'Quote': \"'\",\n  'KeyZ': 'Z', 'KeyX': 'X', 'KeyC': 'C', 'KeyV': 'V', 'KeyB': 'B', 'KeyN': 'N', 'KeyM': 'M', 'Comma': ',',\n  'Period': '.', 'Slash': '/',\n};\nconst validCodes = Object.keys(notShiftedKeysFromCode);\n\nconst isValidCode = (code) => {\n  return includes(validCodes, code);\n};\n\nconst getNotShiftedFromCode = (code) => {\n  const notShifted = notShiftedKeysFromCode[code];\n  return notShifted || '';\n};\n\n\nconst notShiftedKeys = {\n  '`': '`', '~': '`',\n  '!': '1', '@': '2', '#': '3', '$': '4', '%': '5', '^': '6', '&': '7', '*': '8', '(': '9', ')': '0',\n  '-': '-', '_': '-', '=': '=', '+': '=',\n  '[': '[', '{': '[', ']': ']', '}': ']', '\\\\': '\\\\', '|': '\\\\',\n  ';': ';', ':': ';', \"'\": \"'\", '\"': \"'\",\n  ',': ',', '<': ',', '.': '.', '>': '.', '/': '/', '?': '/',\n};\nconst validKeys = Object.keys(notShiftedKeys);\n\nconst isValidKey = (key) => {\n  return /^[A-Za-z]$/.test(key) || includes(validKeys, key);\n};\n\nconst getNotShiftedFromKey = (key) => {\n  if (/[A-Za-z]/.test(key)) {\n    return key.toUpperCase();\n  } else if (!/[`~!@#$%^&*(),./<>?;':\"[\\]\\\\{}|+_=-]/.test(key)) {\n    return key;\n  }\n  return notShiftedKeys[key];\n};\n\n\nexport default Shortcut;\n","import React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport Shortcut from './shortcut';\nimport { NO_OP } from './utils';\nimport icons from './icons';\n\nclass ShortcutCaptureForm extends React.Component {\n  handleKeyDown = (event) => {\n    const { key: keyName, shiftKey } = event;\n    const { code } = event.nativeEvent;\n\n    if (code) {\n      if (Shortcut.isValidCode(code)) {\n        this.props.onChange(new Shortcut({ code, shiftKey }));\n      } else {\n        this.props.onChange(Shortcut.NONE);\n      }\n\n    } else {\n      if (Shortcut.isValidKey(keyName)) {\n        this.props.onChange(new Shortcut({ keyName, shiftKey }));\n      } else {\n        this.props.onChange(Shortcut.NONE);\n      }\n    }\n  }\n\n  getShortcutString = () => {\n    const { t, shortcut } = this.props;\n    if (shortcut === Shortcut.NONE) {\n      return `(${t('shortcut-capture-form.shortcut.none')})`;\n    } else if (shortcut === Shortcut.JUMBLED) {\n      return `(${t('shortcut-capture-form.shortcut.multiple')})`;\n    } else if (shortcut === Shortcut.NO_CHANGE) {\n      return `(${t('shortcut-capture-form.shortcut.no-change')})`;\n    }\n    return shortcut.getStringToDisplay();\n  }\n\n  handleCancelClick = (event) => {\n    event.preventDefault();\n    this.props.onChange(Shortcut.NO_CHANGE);\n  }\n\n  handleRemoveClick = (event) => {\n    event.preventDefault();\n    this.props.onChange(Shortcut.NONE);\n  }\n\n  render = () => {\n    const { t } = this.props;\n\n    return (\n      <div className=\"extended-input\">\n        <input\n          type=\"text\"\n          value={this.getShortcutString()}\n          onChange={NO_OP}\n          onKeyDown={this.handleKeyDown}\n        />\n        <button\n          type=\"button\"\n          onClick={this.handleCancelClick}\n        >\n          <img src={icons.reset} alt={t('shortcut-capture-form.cancel')} />\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.handleRemoveClick}\n        >\n          <img src={icons.remove} alt={t('shortcut-capture-form.remove')} />\n        </button>\n      </div>\n    );\n  }\n}\n\nShortcutCaptureForm.propTypes = {\n  onChange: PropTypes.func,\n}\n\nShortcutCaptureForm.defaultProps = {\n  keyName: '',\n  code: '',\n  shiftKey: false,\n  shortcut: Shortcut.NO_CHANGE,\n  onChange: NO_OP,\n};\n\nexport default withTranslation()(ShortcutCaptureForm);\n","import Shortcut from './shortcut';\n\nexport class ShortcutCollection {\n  constructor(initialShortcutCollection) {\n    for (const field of shortcutNames) {\n      if (initialShortcutCollection && initialShortcutCollection[field]) {\n        this[field] = initialShortcutCollection[field];\n      } else {\n        this[field] = Shortcut.NONE;\n      }\n    }\n  }\n\n  static get EMPTY() {\n    return EMPTY;\n  }\n\n  static get shortcutNames() {\n    return shortcutNames;\n  }\n\n  getDifferenceMarked = (comparisonTarget) => {\n    const result = new ShortcutCollection(this);\n    for (const field of shortcutNames) {\n      result[field] = this[field].getJumbledIfDiffersFrom(comparisonTarget[field]);\n    }\n    return result;\n  }\n\n  equals = (other) => {\n    const thisFields = Object.keys(this);\n    const otherFields = Object.keys(other);\n    return (\n      thisFields.length === otherFields.length\n      && thisFields.every((thisField) => this[thisField] === other[thisField])\n    );\n  }\n}\n\nconst shortcutNames = ['countUp', 'countDown'];\nconst EMPTY = new ShortcutCollection();\n\nexport default ShortcutCollection;\n","import React from 'react';\nimport ReactModal from 'react-modal';\nimport { withTranslation } from 'react-i18next';\nimport escapeStringRegexp from 'escape-string-regexp';\nimport NumberInput from './number-input';\nimport ShortcutCaptureForm from './shortcut-capture-form';\nimport Shortcut from './shortcut';\nimport ShortcutCollection from './shortcut-collection';\nimport { insertCommas, numbersWithCommas } from './utils';\nimport icons from './icons';\n\nconst defaultState = {\n  name: '',\n  initial: '0',\n  min: '0',\n  max: `${Number.MAX_SAFE_INTEGER}`,\n  step: '1',\n  countUpShortcut: Shortcut.NONE,\n  countDownShortcut: Shortcut.NONE,\n};\n\nclass AddNewCounterModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.bindNumberInputEventHandler(['initial', 'min', 'max'], ['change', 'invert']);\n    this.bindNumberInputEventHandler(['step'], ['change']);\n\n    this.nameRef = React.createRef();\n    this.initialRef = React.createRef();\n    this.minRef = React.createRef();\n    this.maxRef = React.createRef();\n    this.stepRef = React.createRef();\n\n    this.state = defaultState;\n  }\n\n  bindNumberInputEventHandler = (names, types) => {\n    for (const name of names) {\n      const sentenceCasedName = name[0].toUpperCase() + name.substring(1);\n      for (const type of types) {\n        const sentenceCasedType = type[0].toUpperCase() + type.substring(1);\n        const primitiveFunctionName = `handleNumberInput${sentenceCasedType}`;\n        if (this[primitiveFunctionName]) {\n          this[`handle${sentenceCasedName}${sentenceCasedType}`] = this[primitiveFunctionName].bind(this, name);\n        }\n      }\n    }\n  }\n\n  handleModalAfterOpen = () => {\n    if (!this.props.existingNames) {\n      this.props.onCancel();\n      return;\n    }\n\n    this.setState({\n      ...defaultState,\n      namePattern: `^(?!(${this.props.existingNames.map((value) => escapeStringRegexp(value)).join('|')})$).+$`,\n    });\n  }\n\n  handleNameChange = (event) => {\n    this.setState({\n      name: event.target.value,\n    });\n  }\n\n  handleNumberInputChange = (stateName, event) => {\n    this.setState({ [stateName]: event.target.value });\n  }\n  handleNumberInputInvert = (stateName) => {\n    this.setState((state) => {\n      if (!isNaN(parseInt(state[stateName], 10))) {\n        return { [stateName]: -state[stateName] };\n      }\n    });\n  }\n\n  handleCountUpShortcutChange = (shortcut) => {\n    this.setState({\n      countUpShortcut: shortcut,\n    });\n  }\n\n  handleCountDownShortcutChange = (shortcut) => {\n    this.setState({\n      countDownShortcut: shortcut,\n    });\n  }\n\n  handleSubmitClick = (event) => {\n    event.preventDefault();\n\n    const { t } = this.props;\n    const rejectionReasons = [t('modal.rejection.notice')];\n    if (!this.nameRef.current.validity.valid) {\n      rejectionReasons.push(t('modal.rejection.name'));\n    }\n    const rangeValidity = (\n      this.initialRef.current.validity.valid\n      && this.minRef.current.validity.valid\n      && this.maxRef.current.validity.valid\n    );\n    if (!rangeValidity) {\n      rejectionReasons.push(t('modal.rejection.range'));\n    }\n    if (!this.stepRef.current.validity.valid) {\n      rejectionReasons.push(t('modal.rejection.step'));\n    }\n\n    if (rejectionReasons.length > 1) {\n      window.alert(rejectionReasons.join('\\n- '));\n      return;\n    }\n\n    let {name, initial, min, max, step} = this.state;\n    [initial, min, max, step] = [initial, min, max, step].map((value) => Number.parseInt(value, 10));\n    const { countUpShortcut: countUp, countDownShortcut: countDown } = this.state;\n    const shortcuts = new ShortcutCollection({ countUp, countDown });\n\n    this.props.onSubmit({ name, initial, min, max, step, shortcuts });\n  }\n\n  handleCancelClick = (event) => {\n    event.preventDefault();\n    this.props.onCancel();\n  }\n\n  render = () => {\n    const { t } = this.props;\n    const modalTitle = t('modal.title.add-new-counter');\n\n    return (\n      <ReactModal\n        isOpen={this.props.isOpen}\n        onAfterOpen={this.handleModalAfterOpen}\n        onRequestClose={this.props.onCancel}\n        contentLabel={modalTitle}\n        shouldCloseOnOverlayClick={true}\n        shouldCloseOnEsc={true}\n        className=\"modal\"\n        overlayClassName=\"modal-overlay\"\n      >\n        <h1>\n          {modalTitle}\n        </h1>\n\n        <hr />\n\n        <ul>\n          <li>\n            <label>\n              {t('modal.name')}\n            </label>\n            <input\n              ref={this.nameRef}\n              type=\"text\"\n              required={true}\n              pattern={this.state.namePattern}\n              value={this.state.name}\n              onChange={this.handleNameChange}\n            />\n          </li>\n          <li>\n            <label>\n              {t('modal.initial')} ({t('modal.integer')})\n            </label>\n            <NumberInput\n              ref={this.initialRef}\n              required={true}\n              min={this.state.min}\n              max={this.state.max}\n              step={1}\n              value={this.state.initial}\n              onChange={this.handleInitialChange}\n              onInvert={this.handleInitialInvert}\n            />\n            <p className=\"modal-input-constraint\">\n              {insertCommas(this.state.min)} ... {insertCommas(this.state.max)}\n            </p>\n          </li>\n          <li>\n            <label>\n              {t('modal.min')} ({t('modal.integer')})\n            </label>\n            <NumberInput\n              ref={this.minRef}\n              required={true}\n              min={Number.MIN_SAFE_INTEGER}\n              max={this.state.initial}\n              step={1}\n              value={this.state.min}\n              onChange={this.handleMinChange}\n              onInvert={this.handleMinInvert}\n            />\n            <p className=\"modal-input-constraint\">\n              {numbersWithCommas.MIN_SAFE_INTEGER} ... {insertCommas(this.state.initial)}\n            </p>\n          </li>\n          <li>\n            <label>\n              {t('modal.max')} ({t('modal.integer')})\n            </label>\n            <NumberInput\n              ref={this.maxRef}\n              required={true}\n              min={this.state.initial}\n              max={Number.MAX_SAFE_INTEGER}\n              step={1}\n              value={this.state.max}\n              onChange={this.handleMaxChange}\n              onInvert={this.handleMaxInvert}\n            />\n            <p className=\"modal-input-constraint\">\n              {insertCommas(this.state.initial)} ... {numbersWithCommas.MAX_SAFE_INTEGER}\n            </p>\n          </li>\n          <li>\n            <label>\n              {t('modal.step')} ({t('modal.positive-integer')})\n            </label>\n            <NumberInput\n              ref={this.stepRef}\n              required={true}\n              min={1}\n              max={Number.MAX_SAFE_INTEGER}\n              step={1}\n              value={this.state.step}\n              onChange={this.handleStepChange}\n            />\n            <p className=\"modal-input-constraint\">\n              1 ... {numbersWithCommas.MAX_SAFE_INTEGER}\n            </p>\n          </li>\n        </ul>\n\n        <hr />\n\n        <h2>\n          {t('modal.shortcuts')}\n        </h2>\n        <ul>\n          <li>\n            <label>\n              {t('modal.count-up')}\n            </label>\n            <ShortcutCaptureForm\n              shortcut={this.state.countUpShortcut}\n              onChange={this.handleCountUpShortcutChange}\n            />\n          </li>\n          <li>\n            <label>\n              {t('modal.count-down')}\n            </label>\n            <ShortcutCaptureForm\n              shortcut={this.state.countDownShortcut}\n              onChange={this.handleCountDownShortcutChange}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <ul className=\"modal-actions\">\n          <li>\n            <button\n              type=\"reset\"\n              onClick={this.handleCancelClick}\n              className=\"action-button button-negative\"\n            >\n              <img src={icons.close} alt={t('modal.cancel')} />\n            </button>\n          </li>\n          <li>\n            <button\n              type=\"button\"\n              onClick={this.handleSubmitClick}\n              className=\"action-button button-positive\"\n            >\n              <img src={icons.check} alt={t('modal.apply')} />\n            </button>\n          </li>\n        </ul>\n\n      </ReactModal>\n    );\n  }\n}\n\nexport default withTranslation([], { withRef: true })(AddNewCounterModal);\n","import Counter from './counter';\nimport ShortcutCollection from './shortcut-collection';\n\nexport class CounterData {\n  constructor(param) {\n    const { name, value, initial, min, max, step, checked, onChange, onEditClick, shortcuts } = {\n      ...Counter.defaultProps,\n      ...param,\n    };\n    this.name = name;\n    this.value = value;\n    this.initial = initial;\n    this.min = min;\n    this.max = max;\n    this.step = step;\n    this.checked = checked;\n    this.onChange = onChange;\n    this.onEditClick = onEditClick;\n    this.shortcuts = shortcuts ? shortcuts : ShortcutCollection.EMPTY;\n  }\n\n  static get manipulatorProps() {\n    return manipulatorProps;\n  }\n\n  getCorrectedValue = () => {\n    if (this.value < this.min) {\n      return this.min;\n    } else if (this.value > this.max) {\n      return this.max;\n    }\n    return this.value;\n  }\n\n  getCorrectedCounterData = () => {\n    return new CounterData({\n      ...this,\n      value: this.getCorrectedValue(),\n    });\n  }\n\n  getComparisonObject = () => {\n    const resultBase = {};\n    for (const prop of manipulatorProps) {\n      resultBase[prop] = this[prop];\n    }\n    return new CounterData(resultBase);\n  }\n\n  getJumbledIfDiffersFrom = (other) => {\n    const result = new CounterData(this);\n    for (const prop of manipulatorProps) {\n      if (this[prop] !== other[prop]) {\n        result[prop] = '';\n      }\n    }\n    return result;\n  }\n}\n\nconst manipulatorProps = ['value', 'initial', 'min', 'max', 'step'];\n\nexport default CounterData;\n","import React from 'react';\nimport ReactModal from 'react-modal';\nimport { withTranslation } from 'react-i18next';\nimport ShortcutCaptureForm from './shortcut-capture-form';\nimport CounterData from './counter-data';\nimport NumberInput from './number-input';\nimport Shortcut from './shortcut';\nimport ShortcutCollection from './shortcut-collection';\nimport { insertCommas, numbersWithCommas } from './utils';\nimport icons from './icons';\n\nclass EditCountersModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.bindNumberInputEventHandler(['value', 'initial', 'min', 'max'], ['change', 'invert', 'reset']);\n    this.bindNumberInputEventHandler(['step'], ['change', 'reset']);\n\n    this.valueRef = React.createRef();\n    this.initialRef = React.createRef();\n    this.minRef = React.createRef();\n    this.maxRef = React.createRef();\n    this.stepRef = React.createRef();\n\n    this.state = {\n      value: '0',\n      initial: '0',\n      min: '0',\n      max: `${Number.MAX_SAFE_INTEGER}`,\n      step: '1',\n      defaults: {\n        minPropUpperBound: Number.MAX_SAFE_INTEGER,\n        maxPropLowerBound: Number.MIN_SAFE_INTEGER,\n        rangeLowerBound: Number.MIN_SAFE_INTEGER,\n        rangeUpperBound: Number.MAX_SAFE_INTEGER,\n      },\n      countUpShortcut: Shortcut.NONE,\n      countDownShortcut: Shortcut.NONE,\n    };\n  }\n\n  bindNumberInputEventHandler = (names, types) => {\n    for (const name of names) {\n      const sentenceCasedName = name[0].toUpperCase() + name.substring(1);\n      for (const type of types) {\n        const sentenceCasedType = type[0].toUpperCase() + type.substring(1);\n        const primitiveFunctionName = `handleNumberInput${sentenceCasedType}`;\n        if (this[primitiveFunctionName]) {\n          this[`handle${sentenceCasedName}${sentenceCasedType}`] = this[primitiveFunctionName].bind(this, name);\n        }\n      }\n    }\n  }\n\n  getActualLowerBound = (state) => {\n    return state.min === '' ? state.defaults.rangeLowerBound : state.min;\n  }\n  getActualUpperBound = (state) => {\n    return state.max === '' ? state.defaults.rangeUpperBound : state.max;\n  }\n  getActualMaxOfMin = (state) => {\n    return Math.min(\n      ...[state.max].filter((value) => value !== ''),\n      state.initial !== '' || state.value !== ''\n        ? Math.min(state.initial, state.value)\n        : state.defaults.minPropUpperBound\n    );\n  }\n  getActualMinOfMax = (state) => {\n    return Math.max(\n      ...[state.min].filter((value) => value !== ''),\n      state.initial !== '' || state.value !== ''\n        ? Math.max(state.initial, state.value)\n        : state.defaults.maxPropLowerBound\n    );\n  }\n\n  handleModalAfterOpen = () => {\n    if (!this.props.names || !this.props.names.length) {\n      this.props.onCancel();\n      return;\n    }\n\n    this.setState((state, props) => {\n      const checkedCount = props.names.length;\n      const commonCounter = new CounterData(props.counters[props.names[0]]);\n      let minPropUpperBound = Math.min(Number.MAX_SAFE_INTEGER, commonCounter.initial, commonCounter.value);\n      let maxPropLowerBound = Math.max(Number.MIN_SAFE_INTEGER, commonCounter.initial, commonCounter.value);\n      let rangeLowerBound = commonCounter.min;\n      let rangeUpperBound = commonCounter.max;\n      for (let index = 1; index < checkedCount; index += 1) {\n        const currentCounter = props.counters[props.names[index]];\n        minPropUpperBound = Math.min(minPropUpperBound, currentCounter.initial, currentCounter.value);\n        maxPropLowerBound = Math.max(maxPropLowerBound, currentCounter.initial, currentCounter.value);\n        rangeLowerBound = Math.max(rangeLowerBound, currentCounter.min);\n        rangeUpperBound = Math.min(rangeUpperBound, currentCounter.max);\n        for (const counterProp of CounterData.manipulatorProps) {\n          if (commonCounter[counterProp] !== currentCounter[counterProp]) {\n            commonCounter[counterProp] = '';\n          }\n        }\n        commonCounter.shortcuts = commonCounter.shortcuts.getDifferenceMarked(currentCounter.shortcuts);\n      }\n\n      const { value, initial, min, max, step, shortcuts } = commonCounter;\n      return {\n        value, initial, min, max, step,\n        defaults: { minPropUpperBound, maxPropLowerBound, rangeLowerBound, rangeUpperBound },\n        countUpShortcut: shortcuts.countUp,\n        countDownShortcut: shortcuts.countDown,\n      };\n    });\n  }\n\n  handleNumberInputChange = (stateName, event) => {\n    this.setState({ [stateName]: event.target.value });\n  }\n  handleNumberInputInvert = (stateName) => {\n    this.setState((state) => {\n      if (!isNaN(parseInt(state[stateName], 10))) {\n        return { [stateName]: -state[stateName] };\n      }\n    });\n  }\n  handleNumberInputReset = (stateName) => {\n    this.setState({ [stateName]: '' });\n  }\n\n  handleCountUpShortcutChange = (shortcut) => {\n    this.setState({\n      countUpShortcut: shortcut,\n    });\n  }\n\n  handleCountDownShortcutChange = (shortcut) => {\n    this.setState({\n      countDownShortcut: shortcut,\n    });\n  }\n\n  handleSubmitClick = (event) => {\n    event.preventDefault();\n\n    const { t } = this.props;\n    const rejectionReasons = [t('modal.rejection.notice')];\n    if (!this.valueRef.current.validity.valid) {\n      rejectionReasons.push(t('modal.rejection.value'));\n    }\n    if (!this.initialRef.current.validity.valid) {\n      rejectionReasons.push(t('modal.rejection.initial'));\n    }\n    if (!this.minRef.current.validity.valid) {\n      rejectionReasons.push(t('modal.rejection.min'));\n    }\n    if (!this.maxRef.current.validity.valid) {\n      rejectionReasons.push(t('modal.rejection.max'));\n    }\n    if (!this.stepRef.current.validity.valid) {\n      rejectionReasons.push(t('modal.rejection.step'));\n    }\n\n    if (rejectionReasons.length > 1) {\n      window.alert(rejectionReasons.join('\\n- '));\n      return;\n    }\n\n    const { value, initial, min, max, step, countUpShortcut, countDownShortcut } = this.state;\n    const submitArgument = {\n      value, initial, min, max, step,\n      shortcuts: new ShortcutCollection({\n        countUp: countUpShortcut,\n        countDown: countDownShortcut,\n      }),\n    };\n\n    let isAllSafeInteger = true;\n    for (const counterProp of CounterData.manipulatorProps) {\n      if (submitArgument[counterProp] === '') {\n        delete submitArgument[counterProp];\n      } else {\n        submitArgument[counterProp] = Number.parseInt(submitArgument[counterProp], 10);\n        if (!Number.isSafeInteger(submitArgument[counterProp])) {\n          isAllSafeInteger = false;\n        }\n      }\n    }\n\n    if (!isAllSafeInteger) {\n      console.error('Something wrong!');\n      return;\n    }\n\n    this.props.onSubmit({ names: this.props.names, ...submitArgument });\n  }\n\n  handleCancelClick = (event) => {\n    event.preventDefault();\n    this.props.onCancel();\n  }\n\n  render = () => {\n    const { t } = this.props;\n\n    const counterNames = this.props.names.map((name) => (\n      <li key={name}>\n        {name}\n      </li>\n    ));\n\n    const valueMin = this.getActualLowerBound(this.state);\n    const valueMax = this.getActualUpperBound(this.state);\n    const maxOfMin = this.getActualMaxOfMin(this.state);\n    const minOfMax = this.getActualMinOfMax(this.state);\n\n    const valueMinWithCommas = insertCommas(valueMin);\n    const valueMaxWithCommas = insertCommas(valueMax);\n\n    const modalTitle = t('modal.title.edit-counters');\n    const valueConstraintString = (\n      valueMin <= valueMax\n      ? `${valueMinWithCommas} ... ${valueMaxWithCommas}`\n      : t('modal.unchangeable')\n    );\n\n    return (\n      <ReactModal\n        isOpen={this.props.isOpen}\n        onAfterOpen={this.handleModalAfterOpen}\n        onRequestClose={this.props.onCancel}\n        contentLabel={modalTitle}\n        shouldCloseOnOverlayClick={true}\n        shouldCloseOnEsc={true}\n        className=\"modal\"\n        overlayClassName=\"modal-overlay\"\n      >\n        <h1>\n          {modalTitle}\n        </h1>\n\n        <hr />\n\n        <ul>\n          <li>\n            <label>\n              {t('modal.name')}\n            </label>\n            <ul className=\"modal-counter-names\">\n              {counterNames}\n            </ul>\n          </li>\n          <li>\n            <label>\n              {t('modal.value')} ({t('modal.integer')})\n            </label>\n            <NumberInput\n              ref={this.valueRef}\n              min={valueMin}\n              max={valueMax}\n              step={1}\n              value={this.state.value}\n              onChange={this.handleValueChange}\n              onInvert={this.handleValueInvert}\n              onReset={this.handleValueReset}\n            />\n            <p className=\"modal-input-constraint\">\n              {valueConstraintString}\n            </p>\n          </li>\n          <li>\n            <label>\n              {t('modal.initial')} ({t('modal.integer')})\n            </label>\n            <NumberInput\n              ref={this.initialRef}\n              min={valueMin}\n              max={valueMax}\n              step={1}\n              value={this.state.initial}\n              onChange={this.handleInitialChange}\n              onInvert={this.handleInitialInvert}\n              onReset={this.handleInitialReset}\n            />\n            <p className=\"modal-input-constraint\">\n              {valueConstraintString}\n            </p>\n          </li>\n          <li>\n            <label>\n              {t('modal.min')} ({t('modal.integer')})\n            </label>\n            <NumberInput\n              ref={this.minRef}\n              min={Number.MIN_SAFE_INTEGER}\n              max={maxOfMin}\n              step={1}\n              value={this.state.min}\n              onChange={this.handleMinChange}\n              onInvert={this.handleMinInvert}\n              onReset={this.handleMinReset}\n            />\n            <p className=\"modal-input-constraint\">\n              {numbersWithCommas.MIN_SAFE_INTEGER} ... {insertCommas(maxOfMin)}\n            </p>\n          </li>\n          <li>\n            <label>\n              {t('modal.max')} ({t('modal.integer')})\n            </label>\n            <NumberInput\n              ref={this.maxRef}\n              min={minOfMax}\n              max={Number.MAX_SAFE_INTEGER}\n              step={1}\n              value={this.state.max}\n              onChange={this.handleMaxChange}\n              onInvert={this.handleMaxInvert}\n              onReset={this.handleMaxReset}\n            />\n            <p className=\"modal-input-constraint\">\n              {insertCommas(minOfMax)} ... {numbersWithCommas.MAX_SAFE_INTEGER}\n            </p>\n          </li>\n          <li>\n            <label>\n              {t('modal.step')} ({t('modal.positive-integer')})\n            </label>\n            <NumberInput\n              ref={this.stepRef}\n              min={1}\n              max={Number.MAX_SAFE_INTEGER}\n              step={1}\n              value={this.state.step}\n              onChange={this.handleStepChange}\n              onReset={this.handleStepReset}\n            />\n            <p className=\"modal-input-constraint\">\n              1 ... {numbersWithCommas.MAX_SAFE_INTEGER}\n            </p>\n          </li>\n        </ul>\n\n        <hr />\n\n        <h2>\n          {t('modal.shortcuts')}\n        </h2>\n        <ul>\n          <li>\n            <label>\n              {t('modal.count-up')}\n            </label>\n            <ShortcutCaptureForm\n              shortcut={this.state.countUpShortcut}\n              onChange={this.handleCountUpShortcutChange}\n            />\n          </li>\n          <li>\n            <label>\n              {t('modal.count-down')}\n            </label>\n            <ShortcutCaptureForm\n              shortcut={this.state.countDownShortcut}\n              onChange={this.handleCountDownShortcutChange}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <ul className=\"modal-actions\">\n          <li>\n            <button\n              type=\"reset\"\n              onClick={this.handleCancelClick}\n              className=\"action-button button-negative\"\n            >\n              <img src={icons.close} alt={t('modal.cancel')} />\n            </button>\n          </li>\n          <li>\n            <button\n              type=\"button\"\n              onClick={this.handleSubmitClick}\n              className=\"action-button button-positive\"\n            >\n              <img src={icons.check} alt={t('modal.apply')} />\n            </button>\n          </li>\n        </ul>\n\n      </ReactModal>\n    );\n  }\n}\n\nexport default withTranslation([], { withRef: true })(EditCountersModal);\n","import CounterData from './counter-data';\n\nconst actionPresets = {\n  GET_COUNTED_UP: (counterData) => (\n    new CounterData({ ...counterData, value: counterData.value + counterData.step })\n      .getCorrectedCounterData()\n  ),\n  GET_COUNTED_DOWN: (counterData) => (\n    new CounterData({ ...counterData, value: counterData.value - counterData.step })\n      .getCorrectedCounterData()\n  ),\n};\n\nexport class CounterAction {\n  constructor(target, action) {\n    this.target = target;\n    this.execute = action;\n  }\n\n  static get actionPresets() {\n    return actionPresets;\n  }\n}\n\nexport default CounterAction;\n","import CounterData from './counter-data';\nimport Shortcut from './shortcut';\nimport ShortcutCollection from './shortcut-collection';\n\n\nconst itemNames = {\n  COUNTER_ORDER: 'counterOrder',\n  COUNTER_PREFIX: 'counter_',\n  _STORAGE_TEST: '__storage_test__',\n};\n\n\nconst getCounterItemName = (name) => {\n  return itemNames.COUNTER_PREFIX + name;\n};\n\n\nexport const available = (() => {\n  try {\n    localStorage.setItem(itemNames._STORAGE_TEST, itemNames._STORAGE_TEST);\n    localStorage.removeItem(itemNames._STORAGE_TEST);\n    return true;\n  } catch (e) {\n    return false;\n  }\n})();\n\n\nexport const initialize = () => {\n  if (!available) {\n    return null;\n  }\n\n  clear();\n  const INITIAL_COUNTER_NAME = 'Sample Counter';\n  setCounterOrder([INITIAL_COUNTER_NAME]);\n  setCounterData(new CounterData({ name: INITIAL_COUNTER_NAME }));\n  return true;\n};\n\n\nexport const getCounterOrder = (isSecondTrial) => {\n  if (!available) {\n    return null;\n  }\n\n  const counterOrderString = localStorage.getItem(itemNames.COUNTER_ORDER);\n  const counterOrder = JSON.parse(counterOrderString);\n\n  if (counterOrder && counterOrder.constructor === Array) {\n    return counterOrder;\n  }\n\n  if (isSecondTrial) {\n    return null;\n  }\n  initialize();\n  return getCounterOrder(true);\n};\n\nexport const setCounterOrder = (counterOrder) => {\n  if (!available) {\n    return null;\n  }\n\n  localStorage.setItem(itemNames.COUNTER_ORDER, JSON.stringify(counterOrder));\n  return true;\n};\n\n\nexport const getCounterData = (name) => {\n  if (!available) {\n    return null;\n  }\n\n  const counterDataString = localStorage.getItem(getCounterItemName(name));\n  const counterData = JSON.parse(counterDataString);\n  if (!counterData) {\n    return null;\n  }\n\n  if (counterData.shortcuts) {\n    for (const shortcutName of ShortcutCollection.shortcutNames) {\n      counterData.shortcuts[shortcutName] = (\n        counterData.shortcuts[shortcutName]\n        ? new Shortcut(counterData.shortcuts[shortcutName])\n        : Shortcut.NONE\n      );\n    }\n    counterData.shortcuts = new ShortcutCollection(counterData.shortcuts);\n  }\n\n  return new CounterData(counterData);\n};\n\nconst storedCounterProperties = ['name', 'value', 'initial', 'min', 'max', 'step', 'shortcuts'];\n\nexport const setCounterData = (counterData) => {\n  if (!available) {\n    return null;\n  }\n\n  const storedCounterData = {};\n  for (const property of storedCounterProperties) {\n    storedCounterData[property] = counterData[property];\n  }\n\n  localStorage.setItem(getCounterItemName(counterData.name), JSON.stringify(storedCounterData));\n  return true;\n};\n\n\nexport const removeCounterData = (name) => {\n  if (!available) {\n    return null;\n  }\n\n  localStorage.removeItem(getCounterItemName(name));\n  return true;\n};\n\n\nexport const clear = () => {\n  if (!available) {\n    return null;\n  }\n\n  localStorage.clear();\n  return true;\n};\n\n\nconst localStorageManager = {\n  available,\n  initialize,\n  getCounterOrder, setCounterOrder,\n  getCounterData, setCounterData, removeCounterData,\n  clear,\n};\nexport default localStorageManager;\n","import React from 'react';\nimport ReactModal from 'react-modal';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Counter from './counter';\nimport AddNewCounterModal from './add-new-counter-modal';\nimport EditCountersModal from './edit-counters-modal';\nimport { GlobalEditModeContext } from './contexts';\nimport CounterAction from './counter-action';\nimport CounterData from './counter-data';\nimport Shortcut from './shortcut';\nimport ShortcutCollection from './shortcut-collection';\nimport localStorageManager from './local-storage-manager';\nimport icons from './icons';\nimport utils from './utils';\n\nReactModal.setAppElement('#root');\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      counterOrder: [],\n      counterIndexesByName: {},\n      counters: {},\n      counterActionsByShortcutId: {},\n      checkedCounters: [],\n      singleCounterToEdit: null,\n      modal: '',\n      isEditModeEnabled: false,\n    };\n  }\n\n  componentDidMount = () => {\n    document.addEventListener('keydown', this.handleDocumentKeyDown);\n\n    this.loadCounters();\n  }\n\n  componentWillUnmount = () => {\n    document.removeEventListener('keydown', this.handleDocumentKeyDown);\n  }\n\n  handleDocumentKeyDown = (nativeEvent) => {\n    if (utils.isTextForm(nativeEvent.target) || this.state.isEditModeEnabled || this.state.modal) {\n      return;\n    }\n\n    const { key, code, shiftKey, ctrlKey, altKey, metaKey } = nativeEvent;\n    const isInvalidKey = (\n      ctrlKey || altKey || metaKey\n      || (code && utils.includes(code.toLowerCase(), 'shift'))\n      || utils.includes(key.toLowerCase(), 'shift')\n    );\n    if (isInvalidKey) {\n      return;\n    }\n\n    const shortcutId = String(new Shortcut({ code, shiftKey, keyName: key }));\n    const counterActions = this.state.counterActionsByShortcutId[shortcutId];\n    if (!counterActions || !counterActions.length) {\n      return;\n    }\n\n    const counters = counterActions.map((action) => action.execute({ ...this.state.counters[action.target] }));\n    this.updateCounters(counters);\n  }\n\n  loadCounters = () => {\n    for (const name of localStorageManager.getCounterOrder()) {\n      const counter = localStorageManager.getCounterData(name);\n      if (counter) {\n        this.appendCounter(counter);\n      }\n    }\n  }\n\n  getUpdatedCounterActions = (counterActionsByShortcutId, { newCounterData, oldCounterData }) => {\n    const shortcutActions = {\n      countUp: CounterAction.actionPresets.GET_COUNTED_UP,\n      countDown: CounterAction.actionPresets.GET_COUNTED_DOWN,\n    };\n    const oldShortcuts = oldCounterData && oldCounterData.shortcuts;\n    const newShortcuts = newCounterData.shortcuts;\n\n    counterActionsByShortcutId = { ...counterActionsByShortcutId };\n    for (const shortcutName of ShortcutCollection.shortcutNames) {\n      const oldShortcutId = oldShortcuts && String(oldShortcuts[shortcutName]);\n      const newShortcutId = String(newShortcuts[shortcutName]);\n      if (oldShortcutId && newShortcutId && oldShortcutId === newShortcutId) {\n        continue;\n      }\n\n      const shouldOldShortcutBeRemoved = (\n        oldShortcutId\n        && newShortcuts[shortcutName] !== Shortcut.JUMBLED\n        && newShortcuts[shortcutName] !== Shortcut.NO_CHANGE\n      );\n      if (shouldOldShortcutBeRemoved) {\n        const counterActionsForShortcut = counterActionsByShortcutId[oldShortcutId];\n        counterActionsByShortcutId[oldShortcutId] = counterActionsForShortcut.filter((action) => (\n          action.target !== oldCounterData.name\n          || action.execute !== shortcutActions[shortcutName]\n        ));\n        if (counterActionsByShortcutId[oldShortcutId].length === 0) {\n          delete counterActionsByShortcutId[oldShortcutId];\n        }\n      }\n\n      if (newShortcutId) {\n        const counterActionsForShortcut =\n          utils.initializeOrGetArrayProperty(counterActionsByShortcutId, newShortcutId).slice();\n        counterActionsForShortcut.push(new CounterAction(newCounterData.name, shortcutActions[shortcutName]));\n        counterActionsByShortcutId[newShortcutId] = counterActionsForShortcut;\n      }\n    }\n\n    return counterActionsByShortcutId;\n  }\n\n  getNewCounter = (counterData) => {\n    return (\n      <Counter\n        {...counterData}\n        key={counterData.name}\n      />\n    );\n  }\n\n  appendCounter = (counterData) => {\n    this.setState((state) => {\n      const { name } = counterData;\n      const correctedShortcuts = new ShortcutCollection(counterData.shortcuts);\n      for (const shortcutName of ShortcutCollection.shortcutNames) {\n        if (Shortcut.NONE.equals(correctedShortcuts[shortcutName])) {\n          correctedShortcuts[shortcutName] = Shortcut.NONE;\n        }\n      }\n      const onChange = (newCounterData) => {\n        this.updateCounters([newCounterData]);\n      };\n      counterData = new CounterData({\n        ...counterData,\n        shortcuts: correctedShortcuts,\n        onChange,\n        onEditClick: this.handleSingleCounterEditClick,\n      });\n\n      const counters = {\n        ...state.counters,\n        [name]: counterData,\n      };\n\n      const counterOrder = state.counterOrder.slice();\n      const counterIndexesByName = {\n        ...state.counterIndexesByName,\n        [name]: counterOrder.length,\n      };\n      counterOrder.push(name);\n\n      const counterActionsByShortcutId = this.getUpdatedCounterActions(\n        state.counterActionsByShortcutId, { newCounterData: counterData }\n      );\n\n      localStorageManager.setCounterOrder(counterOrder);\n      localStorageManager.setCounterData(counterData);\n\n      return {\n        counterOrder,\n        counterIndexesByName,\n        counters,\n        counterActionsByShortcutId,\n      };\n    });\n  }\n\n  updateCounters = (updatedCounters) => {\n    this.setState((state) => {\n      const counters = { ...state.counters };\n\n      let counterActionsByShortcutId = { ...state.counterActionsByShortcutId };\n      for (let newCounterData of updatedCounters) {\n        const { name } = newCounterData;\n        const targetComponentIndex = state.counterIndexesByName[name];\n        if (typeof targetComponentIndex !== 'number') {\n          return;\n        }\n\n        if (newCounterData.shortcuts) {\n          counterActionsByShortcutId = this.getUpdatedCounterActions(\n            counterActionsByShortcutId, { newCounterData, oldCounterData: counters[name] }\n          );\n\n          const correctedShortcuts = {};\n          for (const shortcutName of ShortcutCollection.shortcutNames) {\n            const providedShortcut = newCounterData.shortcuts[shortcutName];\n            const hasChange = String(providedShortcut) || providedShortcut === Shortcut.NONE;\n            correctedShortcuts[shortcutName] = hasChange ? providedShortcut : counters[name].shortcuts[shortcutName];\n          }\n          newCounterData = new CounterData({\n            ...counters[name],\n            ...newCounterData,\n            shortcuts: new ShortcutCollection(correctedShortcuts),\n          });\n        }\n\n        counters[name] = {\n          ...counters[name],\n          ...newCounterData,\n        };\n\n        localStorageManager.setCounterData(counters[name]);\n      }\n\n      return { counters, counterActionsByShortcutId };\n    }, this.updateCheckedCountersState);\n  }\n\n  updateCheckedCountersState = () => {\n    this.setState((state) => {\n      const checkedCounters = state.counterOrder.filter((name) => state.counters[name].checked);\n      return { checkedCounters };\n    });\n  }\n\n  checkOrUncheckAll = (checked) => {\n    this.setState((state) => {\n      const counters = { ...state.counters };\n\n      for (const name of state.counterOrder) {\n        if (counters[name].checked !== checked) {\n          counters[name] = {\n            ...counters[name],\n            checked,\n          };\n        }\n      }\n\n      return { counters };\n    }, this.updateCheckedCountersState);\n  }\n\n  removeCheckedCounters = () => {\n    if (this.state.checkedCounters.length === 0) {\n      return;\n    }\n\n    this.setState((state) => {\n      const counterIndexesByName = { ...state.counterIndexesByName };\n      const counters = { ...state.counters };\n      let counterActionsByShortcutId = { ...state.counterActionsByShortcutId };\n\n      let removed = 0;\n      const counterOrder = state.counterOrder.filter((name, index) => {\n        const checked = counters[name].checked;\n        if (checked) {\n          const newCounterData = new CounterData({ ...counters[name], shortcuts: ShortcutCollection.EMPTY });\n          counterActionsByShortcutId = this.getUpdatedCounterActions(\n            counterActionsByShortcutId, { newCounterData, oldCounterData: counters[name] }\n          );\n\n          delete counterIndexesByName[name];\n          delete counters[name];\n          localStorageManager.removeCounterData(name);\n          removed += 1;\n        } else {\n          counterIndexesByName[name] = index - removed;\n        }\n        return !checked;\n      });\n\n      localStorageManager.setCounterOrder(counterOrder);\n\n      return {\n        counterOrder,\n        counterIndexesByName,\n        counters,\n        counterActionsByShortcutId,\n        isEditModeEnabled: false,\n      }\n    }, this.updateCheckedCountersState);\n  }\n\n  openOrCloseModal = (willOpen, modal) => {\n    this.setState({ modal: willOpen ? modal : '' });\n  }\n\n  isEveryCounterChecked = () => {\n    return this.state.checkedCounters.length === this.state.counterOrder.length;\n  }\n\n  handleResetClick = (event) => {\n    event.preventDefault();\n    if (this.state.checkedCounters.length === 0) {\n      return;\n    }\n\n    const countersToUpdate = this.state.checkedCounters.map((name) => ({\n      name,\n      checked: false,\n      value: this.state.counters[name].initial,\n    }));\n    this.updateCounters(countersToUpdate);\n    this.setState({ isEditModeEnabled: false });\n  }\n\n  handleRemoveClick = (event) => {\n    event.preventDefault();\n    this.removeCheckedCounters();\n  }\n\n  handleClearClick = (event) => {\n    event.preventDefault();\n    const message = this.props.t('header.confirm-clear');\n    if (window.confirm(message)) {\n      localStorageManager.initialize();\n      window.location.reload();\n    }\n  }\n\n  handleNewCounterClick = (event) => {\n    event.preventDefault();\n    this.openOrCloseModal(true, 'AddNewCounterModal');\n  }\n\n  handleNewCounterModalSubmit = (param) => {\n    const newCounter = new CounterData({\n      ...param,\n      value: param.initial,\n    });\n    this.appendCounter(newCounter);\n\n    this.openOrCloseModal(false);\n  }\n\n  handleEditCountersClick = (event) => {\n    event.preventDefault();\n    if (this.state.checkedCounters.length > 0) {\n      this.openOrCloseModal(true, 'EditCountersModal');\n    }\n  }\n\n  handleEditCountersModalSubmit = (param) => {\n    const { counters } = this.state;\n\n    const overwritingShortcuts = {};\n    for (const shortcutName of ShortcutCollection.shortcutNames) {\n      if (param.shortcuts[shortcutName] !== Shortcut.JUMBLED) {\n        overwritingShortcuts[shortcutName] = param.shortcuts[shortcutName];\n      }\n    }\n\n    const newCounters = param.names.map((name) => {\n      const {\n        value = counters[name].value,\n        initial = counters[name].initial,\n        min = counters[name].min,\n        max = counters[name].max,\n        step = counters[name].step,\n        shortcuts = counters[name].shortcuts,\n      } = param;\n      return {\n        name, value, initial, min, max, step,\n        shortcuts: new ShortcutCollection({ ...shortcuts, ...overwritingShortcuts }),\n      };\n    });\n    this.updateCounters(newCounters);\n\n    this.openOrCloseModal(false);\n    if (!this.state.singleCounterToEdit) {\n      this.checkOrUncheckAll(false);\n    }\n    this.setState((state) => ({\n      singleCounterToEdit: null,\n      isEditModeEnabled: !!state.singleCounterToEdit,\n    }));\n  }\n\n  handleModalCancel = () => {\n    this.openOrCloseModal(false);\n    this.setState({ singleCounterToEdit: null });\n  }\n\n  handleEditCounterListClick = (event) => {\n    event.preventDefault();\n    this.checkOrUncheckAll(false);\n    this.setState((state) => {\n      return {\n        isEditModeEnabled: !state.isEditModeEnabled,\n      };\n    });\n  }\n\n  handleSelectAllClick = (event) => {\n    event.preventDefault();\n    this.checkOrUncheckAll(!this.isEveryCounterChecked());\n  }\n\n  handleSingleCounterEditClick = (name) => {\n    this.setState((state) => ({\n      singleCounterToEdit: state.counters[name],\n    }), () => {\n      this.openOrCloseModal(true, 'EditCountersModal');\n    });\n  }\n\n  render = () => {\n    const { t } = this.props;\n\n    const isEditModeEnabled = this.state.isEditModeEnabled;\n    const classes = {\n      headerItem: {\n        normalOnly: classNames('header-item', { 'force-hidden': isEditModeEnabled }),\n        editModeOnly: classNames('header-item', { 'force-hidden': !isEditModeEnabled }),\n      },\n      addNewCounterButton: classNames('button-add', 'button-positive', { 'invisible': isEditModeEnabled }),\n    };\n\n    const counterComponents = this.state.counterOrder.slice().map((name) => {\n      return this.getNewCounter(this.state.counters[name]);\n    });\n    const singleCounterToEdit = this.state.singleCounterToEdit;\n    const editCountersModalProps = {\n      counters: (\n        singleCounterToEdit\n        ? { [singleCounterToEdit.name]: singleCounterToEdit }\n        : this.state.counters\n      ),\n      names: singleCounterToEdit ? [singleCounterToEdit.name] : this.state.checkedCounters,\n    };\n\n    return (\n      <div className=\"App\">\n\n        <div className=\"header-container\">\n          <header className=\"header\">\n            <ul className=\"header-item-group group-left\">\n              <li className={classes.headerItem.normalOnly}>\n                <h1 className=\"app-title\">\n                  MultiCounter\n                </h1>\n              </li>\n\n              <li className={classes.headerItem.editModeOnly}>\n                <button\n                  type=\"button\"\n                  onClick={this.handleSelectAllClick}\n                  className=\"button-with-icon-text\"\n                >\n                  <img src={icons.checkAll} alt=\"\" />\n                  <span>\n                    {t('header.select-all')}\n                  </span>\n                </button>\n              </li>\n\n              <li className={classes.headerItem.editModeOnly}>\n                <button\n                  type=\"button\"\n                  onClick={this.handleEditCountersClick}\n                  className=\"button-with-icon-text\"\n                >\n                  <img src={icons.edit} alt=\"\" />\n                  <span>\n                    {t('header.edit')}\n                  </span>\n                </button>\n              </li>\n\n              <li className={classes.headerItem.editModeOnly}>\n                <button\n                  type=\"button\"\n                  onClick={this.handleResetClick}\n                  className=\"button-with-icon-text button-negative\"\n                >\n                  <img src={icons.reset} alt=\"\" />\n                  <span>\n                    {t('header.reset')}\n                  </span>\n                </button>\n              </li>\n\n              <li className={classes.headerItem.editModeOnly}>\n                <button\n                  type=\"button\"\n                  onClick={this.handleRemoveClick}\n                  className=\"button-with-icon-text button-negative\"\n                >\n                  <img src={icons.remove} alt=\"\" />\n                  <span>\n                    {t('header.remove')}\n                  </span>\n                </button>\n              </li>\n\n              <li className={classes.headerItem.editModeOnly}>\n                <button\n                  type=\"button\"\n                  onClick={this.handleClearClick}\n                  className=\"button-with-icon-text button-negative\"\n                >\n                  <img src={icons.clear} alt=\"\" />\n                  <span>\n                    {t('header.clear')}\n                  </span>\n                </button>\n              </li>\n            </ul>\n\n            <ul className=\"header-item-group group-right\">\n              <li className=\"header-item\">\n                <button\n                  type=\"button\"\n                  onClick={this.handleEditCounterListClick}\n                  className=\"button-with-icon\"\n                >\n                  {\n                    isEditModeEnabled\n                    ? <img src={icons.close} alt={t('header.exit-edit-mode')} />\n                    : <img src={icons.menu} alt={t('header.edit-counter-list')} />\n                  }\n                </button>\n              </li>\n            </ul>\n          </header>\n        </div>\n\n        <div className=\"main-container\">\n          <main className=\"main\">\n            <GlobalEditModeContext.Provider\n              value={isEditModeEnabled}\n            >\n              {counterComponents}\n            </GlobalEditModeContext.Provider>\n\n            <div className=\"main-additional\">\n              <button\n                type=\"button\"\n                onClick={this.handleNewCounterClick}\n                className={classes.addNewCounterButton}\n              >\n                <img src={icons.add} alt={t('main.add-new-counter')} />\n              </button>\n            </div>\n          </main>\n        </div>\n\n        <AddNewCounterModal\n          existingNames={this.state.counterOrder}\n          isOpen={this.state.modal === 'AddNewCounterModal'}\n          onSubmit={this.handleNewCounterModalSubmit}\n          onCancel={this.handleModalCancel}\n        />\n\n        <EditCountersModal\n          counters={editCountersModalProps.counters}\n          names={editCountersModalProps.names}\n          isOpen={this.state.modal === 'EditCountersModal'}\n          onSubmit={this.handleEditCountersModalSubmit}\n          onCancel={this.handleModalCancel}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withTranslation()(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './i18n';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}