{"version":3,"sources":["icons/add.svg","icons/check.svg","icons/check-all.svg","icons/clear.svg","icons/close.svg","icons/edit.svg","icons/menu.svg","icons/remove.svg","icons/reset.svg","icons/subtract.svg","contexts.js","utils.js","shortcut.js","shortcut-collection.js","counter-data.js","counter-action.js","icons.js","counter.jsx","shortcut-capture-form.jsx","add-new-counter-modal.jsx","edit-counters-modal.jsx","local-storage-manager.js","app.jsx","serviceWorker.js","index.js"],"names":["module","exports","GlobalEditModeContext","React","createContext","includes","obj","target","indexOf","platformLower","navigator","platform","toLowerCase","userAgentLower","userAgent","appVersionLower","appVersion","isMacOs","textInputTypes","utils","initializeOrGetArrayProperty","key","isTextForm","element","tagName","toUpperCase","type","Shortcut","code","keyName","shiftKey","getJumbledIfDiffersFrom","comparisonTarget","equals","JUMBLED","getStringToDisplay","shift","getNotShiftedFromCode","getNotShiftedFromKey","other","toString","prefix","this","isValidCode","isValidKey","NONE","NO_CHANGE","notShiftedKeysFromCode","validCodes","Object","keys","notShiftedKeys","validKeys","test","ShortcutCollection","initialShortcutCollection","getDifferenceMarked","result","SHORTCUT_NAMES","field","thisFields","otherFields","length","every","thisField","EMPTY","CounterData","param","getCorrectedValue","value","min","max","getCorrectedCounterData","getComparisonObject","resultBase","MANIPULATOR_PROPS","prop","Counter","defaultProps","name","initial","step","checked","onChange","onEditClick","shortcuts","PRESETS","NO_OP","GET_COUNTED_UP","counterData","GET_COUNTED_DOWN","CounterAction","action","execute","icons","add","check","checkAll","clear","close","edit","menu","remove","reset","subtract","getCorrectValue","newValue","props","callOnChangeByValue","defaults","countDown","countUp","handleCounterClick","event","context","handleCheckboxChange","handleEditClick","stopPropagation","preventDefault","handleCountDownClick","handleCountUpClick","render","isGlobalEditModeEnabled","classes","counter","classNames","counterButton","normalOnly","editModeOnly","className","onClick","readOnly","src","alt","Component","contextType","Number","MAX_SAFE_INTEGER","ShortcutCaptureForm","handleKeyDown","nativeEvent","getShortcutString","shortcut","handleCancelClick","handleRemoveClick","onKeyDown","defaultState","countUpShortcut","countDownShortcut","AddNewCounterModal","handleModalAfterOpen","setState","handleNameChange","handleInitialChange","handleMinChange","handleMaxChange","handleStepChange","handleCountUpShortcutChange","handleCountDownShortcutChange","handleSubmitClick","state","map","parseInt","isSafeInteger","window","alert","existingNames","onSubmit","onCancel","isOpen","onAfterOpen","onRequestClose","contentLabel","shouldCloseOnOverlayClick","shouldCloseOnEsc","overlayClassName","required","inputMode","pattern","EditCountersModal","names","checkedCount","firstCounter","counters","index","currentCounter","counterProp","handleValueChange","submitArgument","isAllSafeInteger","join","ITEM_NAMES","getCounterItemName","available","localStorage","setItem","removeItem","e","initialize","setCounterOrder","setCounterData","counterOrder","JSON","stringify","STORED_COUNTER_PROPERTIES","storedCounterData","property","localStorageManager","getCounterOrder","isSecondTrial","counterOrderString","getItem","parse","constructor","Array","getCounterData","counterDataString","shortcutName","removeCounterData","ReactModal","setAppElement","App","componentDidMount","document","addEventListener","handleDocumentKeyDown","loadCounters","componentWillUnmount","removeEventListener","isEditModeEnabled","modal","ctrlKey","altKey","metaKey","shortcutId","String","counterActions","counterActionsByShortcutId","updateCounters","appendCounter","getUpdatedCounterActions","newCounterData","oldCounterData","shortcutActions","oldShortcuts","newShortcuts","oldShortcutId","newShortcutId","counterActionsForShortcut","filter","slice","push","getNewCounter","correctedShortcuts","handleSingleCounterEditClick","counterIndexesByName","updatedCounters","providedShortcut","hasChange","updateCheckedCountersState","checkedCounters","checkOrUncheckAll","removeCheckedCounters","removed","openOrCloseModal","willOpen","isEveryCounterChecked","handleResetClick","countersToUpdate","handleClearClick","confirm","location","reload","handleNewCounterClick","handleNewCounterModalSubmit","newCounter","handleEditCountersClick","handleEditCountersModalSubmit","overwritingShortcuts","newCounters","singleCounterToEdit","handleModalCancel","handleEditCounterListClick","handleSelectAllClick","headerItem","addNewCounterButton","counterComponents","editCountersModalProps","Provider","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a541b884.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/add.66ce4250.svg\";","module.exports = __webpack_public_path__ + \"static/media/check.e294285e.svg\";","module.exports = __webpack_public_path__ + \"static/media/check-all.e078e73b.svg\";","module.exports = __webpack_public_path__ + \"static/media/clear.4217c5fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.b840e171.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.539b3c38.svg\";","module.exports = __webpack_public_path__ + \"static/media/menu.55f68494.svg\";","module.exports = __webpack_public_path__ + \"static/media/remove.16793e81.svg\";","module.exports = __webpack_public_path__ + \"static/media/reset.1cd9ed86.svg\";","module.exports = __webpack_public_path__ + \"static/media/subtract.d788b81e.svg\";","import React from 'react';\n\nexport const GlobalEditModeContext = React.createContext(false);\n","export const includes = (obj, target) => {\n  if (target === 'indexOf') {\n    return !!obj.indexOf;\n  }\n  if (obj.indexOf) {\n    return obj.indexOf(target) !== -1;\n  }\n  return !!obj[target];\n};\n\n\nexport const initializeOrGetArrayProperty = (obj, key) => {\n  if (!obj[key]) {\n    obj[key] = [];\n  }\n  return obj[key];\n};\n\n\nconst platformLower = navigator.platform.toLowerCase();\nconst userAgentLower = navigator.userAgent.toLowerCase();\nconst appVersionLower = navigator.appVersion.toLowerCase();\n\nexport const isMacOs = (\n  includes(platformLower, 'mac')\n  || includes(userAgentLower, 'mac')\n  || includes(appVersionLower, 'mac')\n);\n\n\nconst textInputTypes = [\n  'date', 'datetime-local', 'email', 'month', 'number', 'password', 'search', 'tel', 'text', 'time', 'url', 'week'\n];\n\nexport const isTextForm = (element) => {\n  const tagName = element.tagName.toUpperCase();\n  return (\n    (tagName === 'INPUT' && includes(textInputTypes, element.type.toLowerCase()))\n    || tagName === 'TEXTAREA'\n  );\n};\n\n\nconst utils = {\n  includes,\n  initializeOrGetArrayProperty,\n  isMacOs,\n  isTextForm,\n};\nexport default utils;\n","import { includes, isMacOs } from './utils';\n\n\nexport class Shortcut {\n  constructor({ code = '', keyName = '', shiftKey = false }) {\n    this.code = code;\n    this.keyName = keyName;\n    this.shiftKey = shiftKey;\n  }\n\n  static get NONE() {\n    return NONE;\n  }\n  static get JUMBLED() {\n    return JUMBLED;\n  }\n  static get NO_CHANGE() {\n    return NO_CHANGE;\n  }\n\n  static isValidCode(code) {\n    return isValidCode(code);\n  }\n  static getNotShiftedFromCode(code) {\n    return getNotShiftedFromCode(code);\n  }\n\n  static isValidKey(keyName) {\n    return isValidKey(keyName);\n  }\n  static getNotShiftedFromKey(keyName) {\n    return getNotShiftedFromKey(keyName);\n  }\n\n  getJumbledIfDiffersFrom = (comparisonTarget) => {\n    return this.equals(comparisonTarget) ? this : JUMBLED;\n  }\n\n  getStringToDisplay = () => {\n    let shift;\n    if (isMacOs) {\n      shift = this.shiftKey ? '⇧' : '';\n    } else {\n      shift = this.shiftKey ? 'Shift+' : '';\n    }\n\n    if (this.code) {\n      return `${shift}${getNotShiftedFromCode(this.code)}`;\n    }\n    return `${shift}${getNotShiftedFromKey(this.keyName)}`;\n  }\n\n  equals = (other) => {\n    return (\n      this.shiftKey === other.shiftKey\n      && this.code === other.code\n      && this.keyName === other.keyName\n    );\n  }\n\n  toString = () => {\n    const prefix = this.shiftKey ? 'Shift' : '';\n    return `${prefix}${this.code || this.keyName}`;\n  }\n}\n\n\nconst NONE = new Shortcut({ keyName: '', code: '', shiftKey: false });\nconst JUMBLED = new Shortcut(NONE);\nconst NO_CHANGE = new Shortcut(NONE);\n\n\nconst notShiftedKeysFromCode = {\n  'Backquote': '`', 'Digit1': '1', 'Digit2': '2', 'Digit3': '3', 'Digit4': '4', 'Digit5': '5', 'Digit6': '6',\n  'Digit7': '7', 'Digit8': '8', 'Digit9': '9', 'Digit0': '0', 'Minus': '-', 'Equal': '=',\n  'KeyQ': 'Q', 'KeyW': 'W', 'KeyE': 'E', 'KeyR': 'R', 'KeyT': 'T', 'KeyY': 'Y', 'KeyU': 'U', 'KeyI': 'I', 'KeyO': 'O',\n  'KeyP': 'P', 'BracketLeft': '[', 'BracketRight': ']', 'Backslash': '\\\\',\n  'KeyA': 'A', 'KeyS': 'S', 'KeyD': 'D', 'KeyF': 'F', 'KeyG': 'G', 'KeyH': 'H', 'KeyJ': 'J', 'KeyK': 'K', 'KeyL': 'L',\n  'Semicolon': ';', 'Quote': \"'\",\n  'KeyZ': 'Z', 'KeyX': 'X', 'KeyC': 'C', 'KeyV': 'V', 'KeyB': 'B', 'KeyN': 'N', 'KeyM': 'M', 'Comma': ',',\n  'Period': '.', 'Slash': '/',\n};\nconst validCodes = Object.keys(notShiftedKeysFromCode);\n\nconst isValidCode = (code) => {\n  return includes(validCodes, code);\n};\n\nconst getNotShiftedFromCode = (code) => {\n  const notShifted = notShiftedKeysFromCode[code];\n  return notShifted || '';\n};\n\n\nconst notShiftedKeys = {\n  '`': '`', '~': '`',\n  '!': '1', '@': '2', '#': '3', '$': '4', '%': '5', '^': '6', '&': '7', '*': '8', '(': '9', ')': '0',\n  '-': '-', '_': '-', '=': '=', '+': '=',\n  '[': '[', '{': '[', ']': ']', '}': ']', '\\\\': '\\\\', '|': '\\\\',\n  ';': ';', ':': ';', \"'\": \"'\", '\"': \"'\",\n  ',': ',', '<': ',', '.': '.', '>': '.', '/': '/', '?': '/',\n};\nconst validKeys = Object.keys(notShiftedKeys);\n\nconst isValidKey = (key) => {\n  return /^[A-Za-z]$/.test(key) || includes(validKeys, key);\n};\n\nconst getNotShiftedFromKey = (key) => {\n  if (/[A-Za-z]/.test(key)) {\n    return key.toUpperCase();\n  } else if (!/[`~!@#$%^&*(),./<>?;':\"[\\]\\\\{}|+_=-]/.test(key)) {\n    return key;\n  }\n  return notShiftedKeys[key];\n};\n\n\nexport default Shortcut;\n","import Shortcut from './shortcut';\n\nexport class ShortcutCollection {\n  constructor(initialShortcutCollection) {\n    for (const field of SHORTCUT_NAMES) {\n      if (initialShortcutCollection && initialShortcutCollection[field]) {\n        this[field] = initialShortcutCollection[field];\n      } else {\n        this[field] = Shortcut.NONE;\n      }\n    }\n  }\n\n  static get EMPTY() {\n    return EMPTY;\n  }\n\n  static get SHORTCUT_NAMES() {\n    return SHORTCUT_NAMES;\n  }\n\n  getDifferenceMarked = (comparisonTarget) => {\n    const result = new ShortcutCollection(this);\n    for (const field of SHORTCUT_NAMES) {\n      result[field] = this[field].getJumbledIfDiffersFrom(comparisonTarget[field]);\n    }\n    return result;\n  }\n\n  equals = (other) => {\n    const thisFields = Object.keys(this);\n    const otherFields = Object.keys(other);\n    return (\n      thisFields.length === otherFields.length\n      && thisFields.every((thisField) => this[thisField] === other[thisField])\n    );\n  }\n}\n\nconst SHORTCUT_NAMES = ['countUp', 'countDown'];\nconst EMPTY = new ShortcutCollection();\n\nexport default ShortcutCollection;\n","import Counter from './counter';\nimport ShortcutCollection from './shortcut-collection';\n\nexport class CounterData {\n  constructor(param) {\n    const { name, value, initial, min, max, step, checked, onChange, onEditClick, shortcuts } = {\n      ...Counter.defaultProps,\n      ...param,\n    };\n    this.name = name;\n    this.value = value;\n    this.initial = initial;\n    this.min = min;\n    this.max = max;\n    this.step = step;\n    this.checked = checked;\n    this.onChange = onChange;\n    this.onEditClick = onEditClick;\n    this.shortcuts = shortcuts ? shortcuts : ShortcutCollection.EMPTY;\n  }\n\n  static get MANIPULATOR_PROPS() {\n    return MANIPULATOR_PROPS;\n  }\n\n  getCorrectedValue = () => {\n    if (this.value < this.min) {\n      return this.min;\n    } else if (this.value > this.max) {\n      return this.max;\n    }\n    return this.value;\n  }\n\n  getCorrectedCounterData = () => {\n    return new CounterData({\n      ...this,\n      value: this.getCorrectedValue(),\n    });\n  }\n\n  getComparisonObject = () => {\n    const resultBase = {};\n    for (const prop of MANIPULATOR_PROPS) {\n      resultBase[prop] = this[prop];\n    }\n    return new CounterData(resultBase);\n  }\n\n  getJumbledIfDiffersFrom = (other) => {\n    const result = new CounterData(this);\n    for (const prop of MANIPULATOR_PROPS) {\n      if (this[prop] !== other[prop]) {\n        result[prop] = '';\n      }\n    }\n    return result;\n  }\n}\n\nconst MANIPULATOR_PROPS = ['value', 'initial', 'min', 'max', 'step'];\n\nexport default CounterData;\n","import CounterData from './counter-data';\n\nconst PRESETS = {\n  NO_OP: () => {},\n  GET_COUNTED_UP: (counterData) => (\n    new CounterData({ ...counterData, value: counterData.value + counterData.step })\n      .getCorrectedCounterData()\n  ),\n  GET_COUNTED_DOWN: (counterData) => (\n    new CounterData({ ...counterData, value: counterData.value - counterData.step })\n      .getCorrectedCounterData()\n  ),\n};\n\nexport class CounterAction {\n  constructor(target, action) {\n    this.target = target;\n    this.execute = action;\n  }\n\n  static get PRESETS() {\n    return PRESETS;\n  }\n}\n\nexport default CounterAction;\n","import add from './icons/add.svg';\nimport check from './icons/check.svg';\nimport checkAll from './icons/check-all.svg';\nimport clear from './icons/clear.svg';\nimport close from './icons/close.svg';\nimport edit from './icons/edit.svg';\nimport menu from './icons/menu.svg';\nimport remove from './icons/remove.svg';\nimport reset from './icons/reset.svg';\nimport subtract from './icons/subtract.svg';\n\nconst icons = { add, check, checkAll, clear, close, edit, menu, remove, reset, subtract };\nexport default icons;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { GlobalEditModeContext } from './contexts';\nimport CounterAction from './counter-action';\nimport icons from './icons';\n\nexport class Counter extends React.Component {\n  getCorrectValue = (newValue) => {\n    if (newValue < this.props.min) {\n      newValue = this.props.min;\n    } else if (newValue > this.props.max) {\n      newValue = this.props.max;\n    }\n    return newValue;\n  }\n\n  callOnChangeByValue = (newValue, defaults) => {\n    newValue = this.getCorrectValue(newValue);\n    if (this.props.value !== newValue) {\n      this.props.onChange({\n        ...defaults,\n        value: newValue,\n        name: this.props.name,\n      });\n    }\n  }\n\n  countDown = () => {\n    const newValue = this.props.value - this.props.step;\n    this.callOnChangeByValue(newValue);\n  }\n\n  countUp = () => {\n    const newValue = this.props.value + this.props.step;\n    this.callOnChangeByValue(newValue);\n  }\n\n  handleCounterClick = (event) => {\n    const isGlobalEditModeEnabled = this.context;\n    if (isGlobalEditModeEnabled) {\n      this.props.onChange({\n        checked: !this.props.checked,\n        name: this.props.name,\n      });\n    }\n  }\n\n  handleCheckboxChange = (event) => {\n    this.props.onChange({\n      checked: event.target.checked,\n      name: this.props.name,\n    });\n  }\n\n  handleEditClick = (event) => {\n    event.stopPropagation();\n    event.preventDefault();\n    this.props.onEditClick(this.props.name);\n  }\n\n  handleCountDownClick = (event) => {\n    event.preventDefault();\n    this.countDown();\n  }\n\n  handleCountUpClick = (event) => {\n    event.preventDefault();\n    this.countUp();\n  }\n\n  render = () => {\n    const isGlobalEditModeEnabled = this.context;\n\n    const classes = {\n      counter: classNames('counter', { 'counter-checked': this.props.checked }),\n      counterButton: {\n        normalOnly: classNames('button-with-icon', { 'force-hidden': isGlobalEditModeEnabled }),\n        editModeOnly: classNames('button-with-icon', { 'force-hidden': !isGlobalEditModeEnabled }),\n      },\n    };\n\n    return (\n      <div\n        className={classes.counter}\n        onClick={this.handleCounterClick}\n      >\n        <ul>\n          <li className=\"counter-row\">\n            <label className=\"counter-label\">\n              {this.props.name}\n            </label>\n          </li>\n\n          <li className=\"counter-row\">\n            <input\n              type=\"text\"\n              value={this.props.value}\n              readOnly={true}\n              className=\"counter-value\"\n            />\n\n            <button\n              type=\"button\"\n              onClick={this.handleCountDownClick}\n              className={classes.counterButton.normalOnly}\n            >\n              <img src={icons.subtract} alt=\"Count down\" />\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.handleCountUpClick}\n              className={classes.counterButton.normalOnly}\n            >\n              <img src={icons.add} alt=\"Count up\" />\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.handleEditClick}\n              className={classes.counterButton.editModeOnly}\n            >\n              <img src={icons.edit} alt=\"Edit this counter\" />\n            </button>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nCounter.contextType = GlobalEditModeContext;\n\nCounter.propTypes = {\n  initial: PropTypes.number,\n  value: PropTypes.number,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  step: PropTypes.number,\n  name: PropTypes.string,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func,\n  onEditClick: PropTypes.func,\n};\n\nCounter.defaultProps = {\n  initial: 0,\n  value: 0,\n  min: 0,\n  max: Number.MAX_SAFE_INTEGER,\n  step: 1,\n  name: '',\n  checked: false,\n  onChange: CounterAction.PRESETS.NO_OP,\n  onEditClick: CounterAction.PRESETS.NO_OP,\n};\n\nexport default Counter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CounterAction from './counter-action';\nimport Shortcut from './shortcut';\nimport icons from './icons';\n\nclass ShortcutCaptureForm extends React.Component {\n  handleKeyDown = (event) => {\n    const { key: keyName, shiftKey } = event;\n    const { code } = event.nativeEvent;\n\n    if (code) {\n      if (Shortcut.isValidCode(code)) {\n        this.props.onChange(new Shortcut({ code, shiftKey }));\n      } else {\n        this.props.onChange(Shortcut.NONE);\n      }\n\n    } else {\n      if (Shortcut.isValidKey(keyName)) {\n        this.props.onChange(new Shortcut({ keyName, shiftKey }));\n      } else {\n        this.props.onChange(Shortcut.NONE);\n      }\n    }\n  }\n\n  getShortcutString = () => {\n    const { shortcut } = this.props;\n    if (shortcut === Shortcut.NONE) {\n      return '(None)';\n    } else if (shortcut === Shortcut.JUMBLED) {\n      return '(Multiple values)';\n    } else if (shortcut === Shortcut.NO_CHANGE) {\n      return '(No change)';\n    }\n    return shortcut.getStringToDisplay();\n  }\n\n  handleCancelClick = (event) => {\n    event.preventDefault();\n    this.props.onChange(Shortcut.NO_CHANGE);\n  }\n\n  handleRemoveClick = (event) => {\n    event.preventDefault();\n    this.props.onChange(Shortcut.NONE);\n  }\n\n  render = () => {\n    return (\n      <div className=\"shortcut-capture\">\n        <input\n          type=\"text\"\n          value={this.getShortcutString()}\n          onChange={CounterAction.PRESETS.NO_OP}\n          onKeyDown={this.handleKeyDown}\n          className=\"shortcut-capture-input\"\n        />\n        <button\n          type=\"button\"\n          onClick={this.handleCancelClick}\n          className=\"shortcut-capture-button\"\n        >\n          <img src={icons.reset} alt=\"Cancel modifying this shortcut binding\" />\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.handleRemoveClick}\n          className=\"shortcut-capture-button\"\n        >\n          <img src={icons.remove} alt=\"Remove this shortcut binding\" />\n        </button>\n      </div>\n    );\n  }\n}\n\nShortcutCaptureForm.propTypes = {\n  onChange: PropTypes.func,\n}\n\nShortcutCaptureForm.defaultProps = {\n  keyName: '',\n  code: '',\n  shiftKey: false,\n  shortcut: Shortcut.NO_CHANGE,\n  onChange: CounterAction.PRESETS.NO_OP,\n};\n\nexport default ShortcutCaptureForm;\n","import React from 'react';\nimport ReactModal from 'react-modal';\nimport ShortcutCaptureForm from './shortcut-capture-form';\nimport Shortcut from './shortcut';\nimport ShortcutCollection from './shortcut-collection';\nimport icons from './icons';\n\nconst defaultState = {\n  name: '',\n  initial: '0',\n  min: '0',\n  max: `${Number.MAX_SAFE_INTEGER}`,\n  step: '1',\n  countUpShortcut: Shortcut.NONE,\n  countDownShortcut: Shortcut.NONE,\n};\n\nclass AddNewCounterModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = defaultState;\n  }\n\n  handleModalAfterOpen = () => {\n    this.setState(defaultState);\n  }\n\n  handleNameChange = (event) => {\n    this.setState({\n      name: event.target.value,\n    });\n  }\n\n  handleInitialChange = (event) => {\n    this.setState({\n      initial: event.target.value,\n    });\n  }\n\n  handleMinChange = (event) => {\n    this.setState({\n      min: event.target.value,\n    });\n  }\n\n  handleMaxChange = (event) => {\n    this.setState({\n      max: event.target.value,\n    });\n  }\n\n  handleStepChange = (event) => {\n    this.setState({\n      step: event.target.value,\n    });\n  }\n\n  handleCountUpShortcutChange = (shortcut) => {\n    this.setState({\n      countUpShortcut: shortcut,\n    });\n  }\n\n  handleCountDownShortcutChange = (shortcut) => {\n    this.setState({\n      countDownShortcut: shortcut,\n    });\n  }\n\n  handleSubmitClick = (event) => {\n    event.preventDefault();\n\n    let {name, initial, min, max, step} = this.state;\n    [initial, min, max, step] = [initial, min, max, step].map((value) => Number.parseInt(value, 10));\n\n    // TODO - Display what form is invalid.\n    if ([initial, min, max, step].map((value) => Number.isSafeInteger(value)).includes(false)) {\n      // FIXME - Show what is invalid exactly.\n      window.alert('Initial value, minimum value, maximum value, and counter step should be safe integers.');\n      return;\n    } else if (step <= 0) {\n      window.alert('Counter step should be a positive integer.');\n      return;\n    } else if (min > max) {\n      window.alert('Mininum value should be lesser than maximum value.');\n      return;\n    } else if (name === '' || this.props.existingNames.includes(name)) {\n      // FIXME - Show what is invalid exactly.\n      window.alert('Name should not be empty or duplicated.');\n      return;\n    }\n\n    const { countUpShortcut: countUp, countDownShortcut: countDown } = this.state;\n    const shortcuts = new ShortcutCollection({ countUp, countDown });\n\n    this.props.onSubmit({ name, initial, min, max, step, shortcuts });\n  }\n\n  handleCancelClick = (event) => {\n    event.preventDefault();\n    this.props.onCancel();\n  }\n\n  render = () => {\n    return (\n      <ReactModal\n        isOpen={this.props.isOpen}\n        onAfterOpen={this.handleModalAfterOpen}\n        onRequestClose={this.props.onCancel}\n        contentLabel=\"Add New Counter\"\n        shouldCloseOnOverlayClick={true}\n        shouldCloseOnEsc={true}\n        className=\"modal\"\n        overlayClassName=\"modal-overlay\"\n      >\n        <h1>\n          Add New Counter\n        </h1>\n\n        <hr />\n\n        <ul>\n          <li>\n            <label>\n              Name\n            </label>\n            <input\n              type=\"text\"\n              required={true}\n              value={this.state.name}\n              onChange={this.handleNameChange}\n            />\n          </li>\n          <li>\n            <label>\n              Initial value (Integer)\n            </label>\n            <input\n              type=\"number\"\n              inputMode=\"numeric\"\n              pattern=\"-?\\\\d*\"\n              value={this.state.initial}\n              onChange={this.handleInitialChange}\n            />\n          </li>\n          <li>\n            <label>\n              Minimum value (Integer)\n            </label>\n            <input\n              type=\"number\"\n              inputMode=\"numeric\"\n              pattern=\"-?\\\\d*\"\n              value={this.state.min}\n              onChange={this.handleMinChange}\n            />\n          </li>\n          <li>\n            <label>\n              Maximum value (Integer)\n            </label>\n            <input\n              type=\"number\"\n              inputMode=\"numeric\"\n              pattern=\"-?\\\\d*\"\n              value={this.state.max}\n              onChange={this.handleMaxChange}\n            />\n          </li>\n          <li>\n            <label>\n              Count step (Positive integer)\n            </label>\n            <input\n              type=\"number\"\n              inputMode=\"numeric\"\n              pattern=\"[1-9]\\\\d*\"\n              value={this.state.step}\n              onChange={this.handleStepChange}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <h2>Shortcuts</h2>\n        <ul>\n          <li>\n            <label>\n              Count Up\n            </label>\n            <ShortcutCaptureForm\n              shortcut={this.state.countUpShortcut}\n              onChange={this.handleCountUpShortcutChange}\n            />\n          </li>\n          <li>\n            <label>\n              Count Down\n            </label>\n            <ShortcutCaptureForm\n              shortcut={this.state.countDownShortcut}\n              onChange={this.handleCountDownShortcutChange}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <ul className=\"modal-actions\">\n          <li>\n            <button\n              type=\"reset\"\n              onClick={this.handleCancelClick}\n              className=\"action-button button-negative\"\n            >\n              <img src={icons.close} alt=\"Cancel\" />\n            </button>\n          </li>\n          <li>\n            <button\n              type=\"button\"\n              onClick={this.handleSubmitClick}\n              className=\"action-button button-positive\"\n            >\n              <img src={icons.check} alt=\"Add\" />\n            </button>\n          </li>\n        </ul>\n\n      </ReactModal>\n    );\n  }\n}\n\nexport default AddNewCounterModal;\n","import React from 'react';\nimport ReactModal from 'react-modal';\nimport ShortcutCaptureForm from './shortcut-capture-form';\nimport CounterData from './counter-data';\nimport Shortcut from './shortcut';\nimport ShortcutCollection from './shortcut-collection';\nimport icons from './icons';\n\nclass EditCountersModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: '0',\n      initial: '0',\n      min: '0',\n      max: `${Number.MAX_SAFE_INTEGER}`,\n      step: '1',\n      countUpShortcut: Shortcut.NONE,\n      countDownShortcut: Shortcut.NONE,\n    };\n  }\n\n  handleModalAfterOpen = () => {\n    if (!this.props.names || !this.props.names.length) {\n      this.props.onCancel();\n      return;\n    }\n\n    this.setState((state, props) => {\n      const checkedCount = props.names.length;\n      const firstCounter = new CounterData(props.counters[props.names[0]]);\n      for (let index = 1; index < checkedCount; index += 1) {\n        const currentCounter = props.counters[props.names[index]];\n        for (const counterProp of CounterData.MANIPULATOR_PROPS) {\n          if (firstCounter[counterProp] !== currentCounter[counterProp]) {\n            firstCounter[counterProp] = '';\n          }\n        }\n        firstCounter.shortcuts = firstCounter.shortcuts.getDifferenceMarked(currentCounter.shortcuts);\n      }\n\n      const { value, initial, min, max, step, shortcuts } = firstCounter;\n      return {\n        value, initial, min, max, step,\n        countUpShortcut: shortcuts.countUp,\n        countDownShortcut: shortcuts.countDown,\n      };\n    });\n  }\n\n  handleValueChange = (event) => {\n    this.setState({\n      value: event.target.value,\n    });\n  }\n\n  handleInitialChange = (event) => {\n    this.setState({\n      initial: event.target.value,\n    });\n  }\n\n  handleMinChange = (event) => {\n    this.setState({\n      min: event.target.value,\n    });\n  }\n\n  handleMaxChange = (event) => {\n    this.setState({\n      max: event.target.value,\n    });\n  }\n\n  handleStepChange = (event) => {\n    this.setState({\n      step: event.target.value,\n    });\n  }\n\n  handleCountUpShortcutChange = (shortcut) => {\n    this.setState({\n      countUpShortcut: shortcut,\n    });\n  }\n\n  handleCountDownShortcutChange = (shortcut) => {\n    this.setState({\n      countDownShortcut: shortcut,\n    });\n  }\n\n  handleSubmitClick = (event) => {\n    event.preventDefault();\n\n    const { value, initial, min, max, step, countUpShortcut, countDownShortcut } = this.state;\n    const submitArgument = {\n      value, initial, min, max, step,\n      shortcuts: new ShortcutCollection({\n        countUp: countUpShortcut,\n        countDown: countDownShortcut,\n      }),\n    };\n\n    let isAllSafeInteger = true;\n    for (const counterProp of CounterData.MANIPULATOR_PROPS) {\n      if (submitArgument[counterProp] === '') {\n        delete submitArgument[counterProp];\n      } else {\n        submitArgument[counterProp] = Number.parseInt(submitArgument[counterProp], 10);\n        if (!Number.isSafeInteger(submitArgument[counterProp])) {\n          isAllSafeInteger = false;\n        }\n      }\n    }\n\n    if (!isAllSafeInteger) {\n      return;\n    } else if (submitArgument.step === 0 || (submitArgument.step && submitArgument.step < 0)) {\n      return;\n    }\n    // TODO - re-implement min/max validation check (be careful of empty values)\n\n    this.props.onSubmit({ names: this.props.names, ...submitArgument });\n  }\n\n  handleCancelClick = (event) => {\n    event.preventDefault();\n    this.props.onCancel();\n  }\n\n  render = () => {\n    // FIXME - Add reset buttons\n    return (\n      <ReactModal\n        isOpen={this.props.isOpen}\n        onAfterOpen={this.handleModalAfterOpen}\n        onRequestClose={this.props.onCancel}\n        contentLabel=\"Edit Counters\"\n        shouldCloseOnOverlayClick={true}\n        shouldCloseOnEsc={true}\n        className=\"modal\"\n        overlayClassName=\"modal-overlay\"\n      >\n        <h1>\n          Edit Counters\n        </h1>\n\n        <hr />\n\n        <ul>\n          <li>\n            <label>\n              Name\n            </label>\n            <p className=\"modal-counter-names\">\n              {this.props.names.join(', ')}\n            </p>\n          </li>\n          <li>\n            <label>\n              Value (Integer)\n            </label>\n            <input\n              type=\"number\"\n              inputMode=\"numeric\"\n              pattern=\"-?\\\\d*\"\n              value={this.state.value}\n              onChange={this.handleValueChange}\n            />\n          </li>\n          <li>\n            <label>\n              Initial value (Integer)\n            </label>\n            <input\n              type=\"number\"\n              inputMode=\"numeric\"\n              pattern=\"-?\\\\d*\"\n              value={this.state.initial}\n              onChange={this.handleInitialChange}\n            />\n          </li>\n          <li>\n            <label>\n              Minimum value (Integer)\n            </label>\n            <input\n              type=\"number\"\n              inputMode=\"numeric\"\n              pattern=\"-?\\\\d*\"\n              value={this.state.min}\n              onChange={this.handleMinChange}\n            />\n          </li>\n          <li>\n            <label>\n              Maximum value (Integer)\n            </label>\n            <input\n              type=\"number\"\n              inputMode=\"numeric\"\n              pattern=\"-?\\\\d*\"\n              value={this.state.max}\n              onChange={this.handleMaxChange}\n            />\n          </li>\n          <li>\n            <label>\n              Count step (Positive integer)\n            </label>\n            <input\n              type=\"number\"\n              inputMode=\"numeric\"\n              pattern=\"[1-9]\\\\d*\"\n              value={this.state.step}\n              onChange={this.handleStepChange}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <h2>Shortcuts</h2>\n        <ul>\n          <li>\n            <label>\n              Count Up\n            </label>\n            <ShortcutCaptureForm\n              shortcut={this.state.countUpShortcut}\n              onChange={this.handleCountUpShortcutChange}\n            />\n          </li>\n          <li>\n            <label>\n              Count Down\n            </label>\n            <ShortcutCaptureForm\n              shortcut={this.state.countDownShortcut}\n              onChange={this.handleCountDownShortcutChange}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <ul className=\"modal-actions\">\n          <li>\n            <button\n              type=\"reset\"\n              onClick={this.handleCancelClick}\n              className=\"action-button button-negative\"\n            >\n              <img src={icons.close} alt=\"Cancel\" />\n            </button>\n          </li>\n          <li>\n            <button\n              type=\"button\"\n              onClick={this.handleSubmitClick}\n              className=\"action-button button-positive\"\n            >\n              <img src={icons.check} alt=\"Apply\" />\n            </button>\n          </li>\n        </ul>\n\n      </ReactModal>\n    );\n  }\n}\n\nexport default EditCountersModal;\n","import CounterData from './counter-data';\nimport Shortcut from './shortcut';\nimport ShortcutCollection from './shortcut-collection';\n\n\nconst ITEM_NAMES = {\n  COUNTER_ORDER: 'counterOrder',\n  COUNTER_PREFIX: 'counter_',\n  _STORAGE_TEST: '__storage_test__',\n};\n\n\nconst getCounterItemName = (name) => {\n  return ITEM_NAMES.COUNTER_PREFIX + name;\n};\n\n\nexport const available = (() => {\n  try {\n    localStorage.setItem(ITEM_NAMES._STORAGE_TEST, ITEM_NAMES._STORAGE_TEST);\n    localStorage.removeItem(ITEM_NAMES._STORAGE_TEST);\n    return true;\n  } catch (e) {\n    return false;\n  }\n})();\n\n\nexport const initialize = () => {\n  if (!available) {\n    return null;\n  }\n\n  clear();\n  const INITIAL_COUNTER_NAME = 'Sample Counter';\n  setCounterOrder([INITIAL_COUNTER_NAME]);\n  setCounterData(new CounterData({ name: INITIAL_COUNTER_NAME }));\n  return true;\n};\n\n\nexport const getCounterOrder = (isSecondTrial) => {\n  if (!available) {\n    return null;\n  }\n\n  const counterOrderString = localStorage.getItem(ITEM_NAMES.COUNTER_ORDER);\n  const counterOrder = JSON.parse(counterOrderString);\n\n  if (counterOrder && counterOrder.constructor === Array) {\n    return counterOrder;\n  }\n\n  if (isSecondTrial) {\n    return null;\n  }\n  initialize();\n  return getCounterOrder(true);\n};\n\nexport const setCounterOrder = (counterOrder) => {\n  if (!available) {\n    return null;\n  }\n\n  localStorage.setItem(ITEM_NAMES.COUNTER_ORDER, JSON.stringify(counterOrder));\n  return true;\n};\n\n\nexport const getCounterData = (name) => {\n  if (!available) {\n    return null;\n  }\n\n  const counterDataString = localStorage.getItem(getCounterItemName(name));\n  const counterData = JSON.parse(counterDataString);\n  if (!counterData) {\n    return null;\n  }\n\n  if (counterData.shortcuts) {\n    for (const shortcutName of ShortcutCollection.SHORTCUT_NAMES) {\n      counterData.shortcuts[shortcutName] = (\n        counterData.shortcuts[shortcutName]\n        ? new Shortcut(counterData.shortcuts[shortcutName])\n        : Shortcut.NONE\n      );\n    }\n    counterData.shortcuts = new ShortcutCollection(counterData.shortcuts);\n  }\n\n  return new CounterData(counterData);\n};\n\nconst STORED_COUNTER_PROPERTIES = ['name', 'value', 'initial', 'min', 'max', 'step', 'shortcuts'];\n\nexport const setCounterData = (counterData) => {\n  if (!available) {\n    return null;\n  }\n\n  const storedCounterData = {};\n  for (const property of STORED_COUNTER_PROPERTIES) {\n    storedCounterData[property] = counterData[property];\n  }\n\n  localStorage.setItem(getCounterItemName(counterData.name), JSON.stringify(storedCounterData));\n  return true;\n};\n\n\nexport const removeCounterData = (name) => {\n  if (!available) {\n    return null;\n  }\n\n  localStorage.removeItem(getCounterItemName(name));\n  return true;\n};\n\n\nexport const clear = () => {\n  if (!available) {\n    return null;\n  }\n\n  localStorage.clear();\n  return true;\n};\n\n\nconst localStorageManager = {\n  available,\n  initialize,\n  getCounterOrder, setCounterOrder,\n  getCounterData, setCounterData, removeCounterData,\n  clear,\n};\nexport default localStorageManager;\n","import React from 'react';\nimport ReactModal from 'react-modal';\nimport classNames from 'classnames';\nimport Counter from './counter';\nimport AddNewCounterModal from './add-new-counter-modal';\nimport EditCountersModal from './edit-counters-modal';\nimport { GlobalEditModeContext } from './contexts';\nimport CounterAction from './counter-action';\nimport CounterData from './counter-data';\nimport Shortcut from './shortcut';\nimport ShortcutCollection from './shortcut-collection';\nimport localStorageManager from './local-storage-manager';\nimport icons from './icons';\nimport utils from './utils';\n\nReactModal.setAppElement('#root');\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      counterOrder: [],\n      counterIndexesByName: {},\n      counters: {},\n      counterActionsByShortcutId: {},\n      checkedCounters: [],\n      singleCounterToEdit: null,\n      modal: '',\n      isEditModeEnabled: false,\n    };\n  }\n\n  componentDidMount = () => {\n    document.addEventListener('keydown', this.handleDocumentKeyDown);\n\n    this.loadCounters();\n  }\n\n  componentWillUnmount = () => {\n    document.removeEventListener('keydown', this.handleDocumentKeyDown);\n  }\n\n  handleDocumentKeyDown = (nativeEvent) => {\n    if (utils.isTextForm(nativeEvent.target) || this.state.isEditModeEnabled || this.state.modal) {\n      return;\n    }\n\n    const { key, code, shiftKey, ctrlKey, altKey, metaKey } = nativeEvent;\n    const isInvalidKey = (\n      ctrlKey || altKey || metaKey\n      || (code && utils.includes(code.toLowerCase(), 'shift'))\n      || utils.includes(key.toLowerCase(), 'shift')\n    );\n    if (isInvalidKey) {\n      return;\n    }\n\n    const shortcutId = String(new Shortcut({ code, shiftKey, keyName: key }));\n    const counterActions = this.state.counterActionsByShortcutId[shortcutId];\n    if (!counterActions || !counterActions.length) {\n      return;\n    }\n\n    const counters = counterActions.map((action) => action.execute({ ...this.state.counters[action.target] }));\n    this.updateCounters(counters);\n  }\n\n  loadCounters = () => {\n    for (const name of localStorageManager.getCounterOrder()) {\n      const counter = localStorageManager.getCounterData(name);\n      if (counter) {\n        this.appendCounter(counter);\n      }\n    }\n  }\n\n  getUpdatedCounterActions = (counterActionsByShortcutId, { newCounterData, oldCounterData }) => {\n    const shortcutActions = {\n      countUp: CounterAction.PRESETS.GET_COUNTED_UP,\n      countDown: CounterAction.PRESETS.GET_COUNTED_DOWN,\n    };\n    const oldShortcuts = oldCounterData && oldCounterData.shortcuts;\n    const newShortcuts = newCounterData.shortcuts;\n\n    counterActionsByShortcutId = { ...counterActionsByShortcutId };\n    for (const shortcutName of ShortcutCollection.SHORTCUT_NAMES) {\n      const oldShortcutId = oldShortcuts && String(oldShortcuts[shortcutName]);\n      const newShortcutId = String(newShortcuts[shortcutName]);\n      if (oldShortcutId && newShortcutId && oldShortcutId === newShortcutId) {\n        continue;\n      }\n\n      const shouldOldShortcutBeRemoved = (\n        oldShortcutId\n        && newShortcuts[shortcutName] !== Shortcut.JUMBLED\n        && newShortcuts[shortcutName] !== Shortcut.NO_CHANGE\n      );\n      if (shouldOldShortcutBeRemoved) {\n        const counterActionsForShortcut = counterActionsByShortcutId[oldShortcutId];\n        counterActionsByShortcutId[oldShortcutId] = counterActionsForShortcut.filter((action) => (\n          action.target !== oldCounterData.name\n          || action.execute !== shortcutActions[shortcutName]\n        ));\n        if (counterActionsByShortcutId[oldShortcutId].length === 0) {\n          delete counterActionsByShortcutId[oldShortcutId];\n        }\n      }\n\n      if (newShortcutId) {\n        const counterActionsForShortcut =\n          utils.initializeOrGetArrayProperty(counterActionsByShortcutId, newShortcutId).slice();\n        counterActionsForShortcut.push(new CounterAction(newCounterData.name, shortcutActions[shortcutName]));\n        counterActionsByShortcutId[newShortcutId] = counterActionsForShortcut;\n      }\n    }\n\n    return counterActionsByShortcutId;\n  }\n\n  getNewCounter = (counterData) => {\n    return (\n      <Counter\n        {...counterData}\n        key={counterData.name}\n      />\n    );\n  }\n\n  appendCounter = (counterData) => {\n    this.setState((state) => {\n      const { name } = counterData;\n      const correctedShortcuts = new ShortcutCollection(counterData.shortcuts);\n      for (const shortcutName of ShortcutCollection.SHORTCUT_NAMES) {\n        if (Shortcut.NONE.equals(correctedShortcuts[shortcutName])) {\n          correctedShortcuts[shortcutName] = Shortcut.NONE;\n        }\n      }\n      const onChange = (newCounterData) => {\n        this.updateCounters([newCounterData]);\n      };\n      counterData = new CounterData({\n        ...counterData,\n        shortcuts: correctedShortcuts,\n        onChange,\n        onEditClick: this.handleSingleCounterEditClick,\n      });\n\n      const counters = {\n        ...state.counters,\n        [name]: counterData,\n      };\n\n      const counterOrder = state.counterOrder.slice();\n      const counterIndexesByName = {\n        ...state.counterIndexesByName,\n        [name]: counterOrder.length,\n      };\n      counterOrder.push(name);\n\n      const counterActionsByShortcutId = this.getUpdatedCounterActions(\n        state.counterActionsByShortcutId, { newCounterData: counterData }\n      );\n\n      localStorageManager.setCounterOrder(counterOrder);\n      localStorageManager.setCounterData(counterData);\n\n      return {\n        counterOrder,\n        counterIndexesByName,\n        counters,\n        counterActionsByShortcutId,\n      };\n    });\n  }\n\n  updateCounters = (updatedCounters) => {\n    this.setState((state) => {\n      const counters = { ...state.counters };\n\n      let counterActionsByShortcutId = { ...state.counterActionsByShortcutId };\n      for (let newCounterData of updatedCounters) {\n        const { name } = newCounterData;\n        const targetComponentIndex = state.counterIndexesByName[name];\n        if (typeof targetComponentIndex !== 'number') {\n          return;\n        }\n\n        if (newCounterData.shortcuts) {\n          counterActionsByShortcutId = this.getUpdatedCounterActions(\n            counterActionsByShortcutId, { newCounterData, oldCounterData: counters[name] }\n          );\n\n          const correctedShortcuts = {};\n          for (const shortcutName of ShortcutCollection.SHORTCUT_NAMES) {\n            const providedShortcut = newCounterData.shortcuts[shortcutName];\n            const hasChange = String(providedShortcut) || providedShortcut === Shortcut.NONE;\n            correctedShortcuts[shortcutName] = hasChange ? providedShortcut : counters[name].shortcuts[shortcutName];\n          }\n          newCounterData = new CounterData({\n            ...counters[name],\n            ...newCounterData,\n            shortcuts: new ShortcutCollection(correctedShortcuts),\n          });\n        }\n\n        counters[name] = {\n          ...counters[name],\n          ...newCounterData,\n        };\n\n        localStorageManager.setCounterData(counters[name]);\n      }\n\n      return { counters, counterActionsByShortcutId };\n    }, this.updateCheckedCountersState);\n  }\n\n  updateCheckedCountersState = () => {\n    this.setState((state) => {\n      const checkedCounters = state.counterOrder.filter((name) => state.counters[name].checked);\n      return { checkedCounters };\n    });\n  }\n\n  checkOrUncheckAll = (checked) => {\n    this.setState((state) => {\n      const counters = { ...state.counters };\n\n      for (const name of state.counterOrder) {\n        if (counters[name].checked !== checked) {\n          counters[name] = {\n            ...counters[name],\n            checked,\n          };\n        }\n      }\n\n      return { counters };\n    }, this.updateCheckedCountersState);\n  }\n\n  removeCheckedCounters = () => {\n    if (this.state.checkedCounters.length === 0) {\n      return;\n    }\n\n    this.setState((state) => {\n      const counterIndexesByName = { ...state.counterIndexesByName };\n      const counters = { ...state.counters };\n      let counterActionsByShortcutId = { ...state.counterActionsByShortcutId };\n\n      let removed = 0;\n      const counterOrder = state.counterOrder.filter((name, index) => {\n        const checked = counters[name].checked;\n        if (checked) {\n          const newCounterData = new CounterData({ ...counters[name], shortcuts: ShortcutCollection.EMPTY });\n          counterActionsByShortcutId = this.getUpdatedCounterActions(\n            counterActionsByShortcutId, { newCounterData, oldCounterData: counters[name] }\n          );\n\n          delete counterIndexesByName[name];\n          delete counters[name];\n          localStorageManager.removeCounterData(name);\n          removed += 1;\n        } else {\n          counterIndexesByName[name] = index - removed;\n        }\n        return !checked;\n      });\n\n      localStorageManager.setCounterOrder(counterOrder);\n\n      return {\n        counterOrder,\n        counterIndexesByName,\n        counters,\n        counterActionsByShortcutId,\n        isEditModeEnabled: false,\n      }\n    }, this.updateCheckedCountersState);\n  }\n\n  openOrCloseModal = (willOpen, modal) => {\n    this.setState({ modal: willOpen ? modal : '' });\n  }\n\n  isEveryCounterChecked = () => {\n    return this.state.checkedCounters.length === this.state.counterOrder.length;\n  }\n\n  handleResetClick = (event) => {\n    event.preventDefault();\n    if (this.state.checkedCounters.length === 0) {\n      return;\n    }\n\n    const countersToUpdate = this.state.checkedCounters.map((name) => ({\n      name,\n      checked: false,\n      value: this.state.counters[name].initial,\n    }));\n    this.updateCounters(countersToUpdate);\n    this.setState({ isEditModeEnabled: false });\n  }\n\n  handleRemoveClick = (event) => {\n    event.preventDefault();\n    this.removeCheckedCounters();\n  }\n\n  handleClearClick = (event) => {\n    event.preventDefault();\n    if (window.confirm('All counters will be removed if you click ‘OK’ button.')) {\n      localStorageManager.initialize();\n      window.location.reload();\n    }\n  }\n\n  handleNewCounterClick = (event) => {\n    event.preventDefault();\n    this.openOrCloseModal(true, 'AddNewCounterModal');\n  }\n\n  handleNewCounterModalSubmit = (param) => {\n    // TODO - Validate param\n    // TODO - if `value` is not a number, assign `initial` to `value`\n    const newCounter = new CounterData({\n      ...param,\n      value: param.initial,\n    });\n    this.appendCounter(newCounter);\n\n    this.openOrCloseModal(false);\n  }\n\n  handleEditCountersClick = (event) => {\n    event.preventDefault();\n    if (this.state.checkedCounters.length > 0) {\n      this.openOrCloseModal(true, 'EditCountersModal');\n    }\n  }\n\n  handleEditCountersModalSubmit = (param) => {\n    // TODO - Validate param\n    // TODO - if `value` is not a number, assign `initial` to `value`\n    const { counters } = this.state;\n\n    const overwritingShortcuts = {};\n    for (const shortcutName of ShortcutCollection.SHORTCUT_NAMES) {\n      if (param.shortcuts[shortcutName] !== Shortcut.JUMBLED) {\n        overwritingShortcuts[shortcutName] = param.shortcuts[shortcutName];\n      }\n    }\n\n    const newCounters = param.names.map((name) => {\n      const {\n        value = counters[name].value,\n        initial = counters[name].initial,\n        min = counters[name].min,\n        max = counters[name].max,\n        step = counters[name].step,\n        shortcuts = counters[name].shortcuts,\n      } = param;\n      return {\n        name, value, initial, min, max, step,\n        shortcuts: new ShortcutCollection({ ...shortcuts, ...overwritingShortcuts }),\n      };\n    });\n    this.updateCounters(newCounters);\n\n    this.openOrCloseModal(false);\n    if (!this.state.singleCounterToEdit) {\n      this.checkOrUncheckAll(false);\n    }\n    this.setState((state) => ({\n      singleCounterToEdit: null,\n      isEditModeEnabled: !!state.singleCounterToEdit,\n    }));\n  }\n\n  handleModalCancel = () => {\n    this.openOrCloseModal(false);\n    this.setState({ singleCounterToEdit: null });\n  }\n\n  handleEditCounterListClick = (event) => {\n    event.preventDefault();\n    this.checkOrUncheckAll(false);\n    this.setState((state) => {\n      return {\n        isEditModeEnabled: !state.isEditModeEnabled,\n      };\n    });\n  }\n\n  handleSelectAllClick = (event) => {\n    event.preventDefault();\n    this.checkOrUncheckAll(!this.isEveryCounterChecked());\n  }\n\n  handleSingleCounterEditClick = (name) => {\n    this.setState((state) => ({\n      singleCounterToEdit: state.counters[name],\n    }), () => {\n      this.openOrCloseModal(true, 'EditCountersModal');\n    });\n  }\n\n  render = () => {\n    const isEditModeEnabled = this.state.isEditModeEnabled;\n    const classes = {\n      headerItem: {\n        normalOnly: classNames('header-item', { 'force-hidden': isEditModeEnabled }),\n        editModeOnly: classNames('header-item', { 'force-hidden': !isEditModeEnabled }),\n      },\n      addNewCounterButton: classNames('button-add', 'button-positive', { 'invisible': isEditModeEnabled }),\n    };\n\n    const counterComponents = this.state.counterOrder.slice().map((name) => {\n      return this.getNewCounter(this.state.counters[name]);\n    });\n    const singleCounterToEdit = this.state.singleCounterToEdit;\n    const editCountersModalProps = {\n      counters: (\n        singleCounterToEdit\n        ? { [singleCounterToEdit.name]: singleCounterToEdit }\n        : this.state.counters\n      ),\n      names: singleCounterToEdit ? [singleCounterToEdit.name] : this.state.checkedCounters,\n    };\n\n    return (\n      <div className=\"App\">\n\n        <div className=\"header-container\">\n          <header className=\"header\">\n            <ul className=\"header-item-group group-left\">\n              <li className={classes.headerItem.normalOnly}>\n                <h1 className=\"app-title\">\n                  MultiCounter\n                </h1>\n              </li>\n\n              <li className={classes.headerItem.editModeOnly}>\n                <button\n                  type=\"button\"\n                  onClick={this.handleSelectAllClick}\n                  className=\"button-with-icon\"\n                >\n                  <img src={icons.checkAll} alt=\"Select/Unselect All\" />\n                </button>\n              </li>\n\n              <li className={classes.headerItem.editModeOnly}>\n                <button\n                  type=\"button\"\n                  onClick={this.handleEditCountersClick}\n                  className=\"button-with-icon\"\n                >\n                  <img src={icons.edit} alt=\"Edit Selected Counters\" />\n                </button>\n              </li>\n\n              <li className={classes.headerItem.editModeOnly}>\n                <button\n                  type=\"button\"\n                  onClick={this.handleResetClick}\n                  className=\"button-with-icon button-negative\"\n                >\n                  <img src={icons.reset} alt=\"Reset Selected Counters\" />\n                </button>\n              </li>\n\n              <li className={classes.headerItem.editModeOnly}>\n                <button\n                  type=\"button\"\n                  onClick={this.handleRemoveClick}\n                  className=\"button-with-icon button-negative\"\n                >\n                  <img src={icons.remove} alt=\"Remove Selected Counters\" />\n                </button>\n              </li>\n\n              <li className={classes.headerItem.editModeOnly}>\n                <button\n                  type=\"button\"\n                  onClick={this.handleClearClick}\n                  className=\"button-with-icon button-negative\"\n                >\n                  <img src={icons.clear} alt=\"Clear All Counters\" />\n                </button>\n              </li>\n            </ul>\n\n            <ul className=\"header-item-group group-right\">\n              <li className=\"header-item\">\n                <button\n                  type=\"button\"\n                  onClick={this.handleEditCounterListClick}\n                  className=\"button-with-icon\"\n                >\n                  {\n                    isEditModeEnabled\n                    ? <img src={icons.close} alt=\"Exit Edit Mode\" />\n                    : <img src={icons.menu} alt=\"Edit Counter List\" />\n                  }\n                </button>\n              </li>\n            </ul>\n          </header>\n        </div>\n\n        <div className=\"main-container\">\n          <main className=\"main\">\n            <GlobalEditModeContext.Provider\n              value={isEditModeEnabled}\n            >\n              {counterComponents}\n            </GlobalEditModeContext.Provider>\n\n            <div className=\"main-additional\">\n              <button\n                type=\"button\"\n                onClick={this.handleNewCounterClick}\n                className={classes.addNewCounterButton}\n              >\n                <img src={icons.add} alt=\"Add New Counter\" />\n              </button>\n            </div>\n          </main>\n        </div>\n\n        <AddNewCounterModal\n          existingNames={this.state.counterOrder}\n          isOpen={this.state.modal === 'AddNewCounterModal'}\n          onSubmit={this.handleNewCounterModalSubmit}\n          onCancel={this.handleModalCancel}\n        />\n\n        <EditCountersModal\n          counters={editCountersModalProps.counters}\n          names={editCountersModalProps.names}\n          isOpen={this.state.modal === 'EditCountersModal'}\n          onSubmit={this.handleEditCountersModalSubmit}\n          onCancel={this.handleModalCancel}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}